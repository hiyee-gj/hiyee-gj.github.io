<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2021-03-28T23:43:04+09:00</updated><id>http://localhost:4000/</id><title type="html">Hiyee Blog</title><subtitle>Developer with good Influence</subtitle><entry><title type="html">004. HTTP</title><link href="http://localhost:4000/004-http" rel="alternate" type="text/html" title="004. HTTP" /><published>2021-03-28T00:00:00+09:00</published><updated>2021-03-28T00:00:00+09:00</updated><id>http://localhost:4000/004-http</id><content type="html" xml:base="http://localhost:4000/004-http">&lt;h2 id=&quot;http-특징&quot;&gt;HTTP 특징&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/bce8f6e5-d075-4d7f-ac79-30bf7e5cc55d/http.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Request&lt;/code&gt; / &lt;code class=&quot;highlighter-rouge&quot;&gt;Response&lt;/code&gt; (요청/ 응답)&lt;/li&gt;
  &lt;li&gt;소통의 핵심은 요청과 응답&lt;/li&gt;
  &lt;li&gt;인간의 소통방식이 컴퓨터끼리의 소통방식에 적용된 것&lt;/li&gt;
  &lt;li&gt;http 요청과 응답은 그저 메세지에 불과함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;stateless&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;state&lt;/code&gt;(상태) + &lt;code class=&quot;highlighter-rouge&quot;&gt;less&lt;/code&gt;(없음)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; 통신은 과거의 &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt; 통신에 대한 내용을 전혀 알지 못함
매 통신마다 필요한 모든 정보를 담아서 요청을 보낸다!!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;http-메시지-구조&quot;&gt;HTTP 메시지 구조&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;HTTP 메시지는 구조를 이루고 있는데 이 구조를 보면서 어떤 의미인지 파악하는 게 중요하다&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;START LINE(요청일 때) / STATUS LINE(응답일 때)

- 요청과 응답의 상태를 표시해 줌(메소드, url, 버전, 상태)
  - post/users/login HTTP/1.1 (start line)
  - HTTP/1.1 200 SUCCESS (status line)

Headers

- 요청과 응답에 대한 추가 정보(메타 데이터)
  - host, user-agent, content-length, content-type 등

Body

- 요청과 응답의 실제 정보
  - 'username':'wecode' 'password':&quot;wecode!123&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;request-massage-구조&quot;&gt;Request massage 구조&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/be05041e-e462-4573-8d7b-5e1bc6e1f186/http%20request%20message%20desc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;http-request-메소드&quot;&gt;http request 메소드&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;는 요청 &lt;code class=&quot;highlighter-rouge&quot;&gt;메서드&lt;/code&gt;를 정의하여, 주어진 리소스에 &lt;strong&gt;수행하길 원하는 행동을 나타낸다&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;간혹 요청 메서드를 “&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP 동사&lt;/code&gt;“라고 부르기도 한다&lt;/li&gt;
  &lt;li&gt;각각의 메서드는 서로 다른 의미를 구현하지만, 일부 기능은 메서드 집합 간에 서로 공유하기도 함&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;예시&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;
        &lt;p&gt;GET
데이터 받아오기만 할때
웹페이지에 접속해서 필요한 데이터를 불러올 때&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;POST
데이터를 생성/ 수정할때 사용
Body에 담는 내용이 핵심!!&lt;/p&gt;
      &lt;/li&gt;
      &lt;li&gt;
        &lt;p&gt;DELETE
서버에 저장된 특정 데이터를 삭제할 때&lt;/p&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;등 더 많은 메소드들이 존재
&amp;lt;/br&amp;gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;메소드&lt;/code&gt;를 정의했으니, &lt;code class=&quot;highlighter-rouge&quot;&gt;Request massage&lt;/code&gt;를 다시 살펴보면, &lt;code class=&quot;highlighter-rouge&quot;&gt;Start Line&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;메소드&lt;/code&gt;와, &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;버전&lt;/code&gt;이 표시되어 있는 것을 볼 수 있다&lt;/li&gt;
  &lt;li&gt;그 아래 &lt;code class=&quot;highlighter-rouge&quot;&gt;Header&lt;/code&gt;에는 요청과 대한 추가 정보가 표시되어 있고, 마지막에 위치한 &lt;code class=&quot;highlighter-rouge&quot;&gt;Body&lt;/code&gt;에는 실제 요청하는 내용이 담겨 있는 것을 볼 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;response-massage-구조&quot;&gt;Response massage 구조&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/f36e7449-c5c8-4cc2-8e39-1ecc5b986fdd/http%20response%20message%20desc.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Response massage&lt;/code&gt;의 구조도 비슷한 형태를 이루고 있으나, 처음 정보가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Start Line&lt;/code&gt;이 아닌 &lt;code class=&quot;highlighter-rouge&quot;&gt;Status Line&lt;/code&gt;으로 명칭되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;메소드&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;이 사라지고, &lt;code class=&quot;highlighter-rouge&quot;&gt;버전&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;상태코드&lt;/code&gt;가 표시되어 있는 것을 볼 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;http-상태코드&quot;&gt;HTTP 상태코드&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;응답 상태 코드&lt;/code&gt;는 특정 &lt;code class=&quot;highlighter-rouge&quot;&gt;HTTP 요청&lt;/code&gt;이 성공적으로 완료되었는지 알려준다&lt;/li&gt;
  &lt;li&gt;응답은 5개의 그룹으로 나누어 짐
    &lt;ul&gt;
      &lt;li&gt;1XX : &lt;code class=&quot;highlighter-rouge&quot;&gt;조건부 응답&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;클라이언트가 데이터를 일부만 포함해 보내어 서버가 데이터를 더 보내라고 하는 응답 코드&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;2XX : &lt;code class=&quot;highlighter-rouge&quot;&gt;성공&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;서버가 클라이언트로부터의 요청을 성공적으로 처리한 후 반환하는 응답 코드&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;3XX : &lt;code class=&quot;highlighter-rouge&quot;&gt;리다이렉션 완료&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;클라이언트가 요청을 완료하기 위해 작업이 남아있는 코드. 보통 새로고침을 한 경우 반환하는 응답 코드&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;4XX : &lt;code class=&quot;highlighter-rouge&quot;&gt;요청 오류&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;클라이언트의 요청이 잘못됐을 때 반환하는 응답 코드. 즉, 문제 발생 원인이 클라이언트에 있다는 뜻&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;500 : &lt;code class=&quot;highlighter-rouge&quot;&gt;서버 오류&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;서버의 설정, 코드 등의 문제로 오류가 났을 때 반환되는 코드
&amp;lt;/br&amp;gt;&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;그 외의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Header&lt;/code&gt;부터 &lt;code class=&quot;highlighter-rouge&quot;&gt;Body&lt;/code&gt;는 같은 형태로 출력되는 모습&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="web" /><summary type="html">HTTP 특징</summary></entry><entry><title type="html">003. Django - view</title><link href="http://localhost:4000/003-django" rel="alternate" type="text/html" title="003. Django - view" /><published>2021-03-26T00:00:00+09:00</published><updated>2021-03-26T00:00:00+09:00</updated><id>http://localhost:4000/003-django</id><content type="html" xml:base="http://localhost:4000/003-django">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt; 웹의 로직을 담당&lt;/li&gt;
  &lt;li&gt;웹에서 일어나는 데이터 저장, 파일 다운로드 등을 위해 코드 작성
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/0294252e-7f42-463b-a180-44ea5c29904e/view.py%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 명심해야 할 점&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; 인자를 받고&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HttpResponse&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt; 하기 전에 데이터 관련된 코드들이 중간에 들어가는 개념
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/74ae4f6b-50ce-482c-b62a-ad2c3e4b8317/view.py%20index%20%E1%84%89%E1%85%AE%E1%84%8C%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;models.py&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;을 불러와서 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt; 데이터에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;출판일자&lt;/code&gt;를 정렬하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;5개&lt;/code&gt;까지 가져오고 &lt;code class=&quot;highlighter-rouge&quot;&gt;5개&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;로 연결하여 리스폰스 하겠다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/3b9e67b0-a737-45ed-ab86-e82821e5aa55/polls:urls.py%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;polls/urls.py&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에서는 해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; 이 끝나는 지점의 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 작업을 수행하게 된다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;httpresponse&lt;/code&gt;를 리턴하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;http404&lt;/code&gt; 같은 예외를 리턴함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;template-필요성&quot;&gt;Template 필요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;지금까지 클라이언트에게 보여주는 페이지가 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내에 있었음&lt;/li&gt;
  &lt;li&gt;데이터를 추출해서 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;클라이언트&lt;/code&gt;에게 보여줌&lt;/li&gt;
  &lt;li&gt;디자인 수정 시 너무 어려움, 디자인 수정을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부를 수정해야 하기 때문에&lt;/li&gt;
  &lt;li&gt;그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;와 디자인 담당인 &lt;code class=&quot;highlighter-rouge&quot;&gt;template&lt;/code&gt;을 분리해야 함&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;수정이 편하고, 더 적게 수정하는 방안으로 빌드하는 것이 중요하다!!!!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="django" /><summary type="html">view는 django 웹의 로직을 담당 웹에서 일어나는 데이터 저장, 파일 다운로드 등을 위해 코드 작성 view 명심해야 할 점 view 에서는 request 인자를 받고 HttpResponse로 return response 하기 전에 데이터 관련된 코드들이 중간에 들어가는 개념 models.py에서 Question을 불러와서 출력 question 데이터에서 출판일자를 정렬하여 5개까지 가져오고 5개를 ,로 연결하여 리스폰스 하겠다 polls/urls.py에 path 설정 urls.py에서는 해당 url 이 끝나는 지점의 path 작업을 수행하게 된다 view에서는 httpresponse를 리턴하거나 http404 같은 예외를 리턴함</summary></entry><entry><title type="html">002. Django - tutorial 2 review</title><link href="http://localhost:4000/002-django-copy" rel="alternate" type="text/html" title="002. Django - tutorial 2 review" /><published>2021-03-25T00:00:00+09:00</published><updated>2021-03-25T00:00:00+09:00</updated><id>http://localhost:4000/002-django%20copy</id><content type="html" xml:base="http://localhost:4000/002-django-copy">&lt;h2 id=&quot;tutorial-2-review&quot;&gt;tutorial 2 review&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;SQLite&lt;/code&gt;를 제공하고 있다 하지만 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;을 사용하기 위해 설정을 조금 변경하는 과정을 소개한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql에서-database-생성하기&quot;&gt;MySQL에서 DATABASE 생성하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.server start&lt;/code&gt;로 서버를 열어주기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u root -p&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 접속&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/98e314f9-5fc4-4330-bba2-f6d1a20200de/mysql%20data%20create.png&quot; alt=&quot;&quot; /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;DATABASE&lt;/code&gt; 생성 &lt;code class=&quot;highlighter-rouge&quot;&gt;testdata&lt;/code&gt;는 데이터베이스 이름임&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/6bc65df3-ef7e-48bc-aa14-89c9a5f6cbb7/mysql%20show%20databases;.png&quot; alt=&quot;&quot; /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW DATABASES&lt;/code&gt;를 통해서 생성됐는지 확인&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;mysitesettingspy에서-mysql로-변경해주기&quot;&gt;mysite/settings.py에서 MySQL로 변경해주기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/0d8314e3-ac04-48bb-9e2e-d82dd9365f73/mysql%20settings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;installed_apps&quot;&gt;INSTALLED_APPS&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/eb56ca39-d584-42f2-bf4f-fd188329ec77/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysite/settings.py&lt;/code&gt;에 확인하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;installed_apps&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;에서 기본으로 제공하는 앱들을 확인할 수 있다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/482ae2e1-c2c4-4d28-9895-b951499dca2b/1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;앱들의 기능에 대한 내용이다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;기본 어플리케이션&lt;/code&gt;들 중 몇몇은 최소한 하나 이상의 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스 테이블&lt;/code&gt;을 사용한다&lt;/li&gt;
  &lt;li&gt;그러기 위해선 데이터베이스에서 테이블을 미리 만들 필요가 있음&lt;/li&gt;
  &lt;li&gt;다음 명령을 통해 테이블 생성 &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py migrate&lt;/code&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/634521cc-efa3-48e3-9d58-7382a7444d58/migrate.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;model-작성하기&quot;&gt;model 작성하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt;이란 부가적인 메타데이터를 가진 데이터베이스의 구조를 말한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Choice&lt;/code&gt;라는 모델을 작성
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/41b9c6ad-2827-48e0-991e-8d80b36f6726/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt; 에는 질문(문자 최대길이 200) 내용 생성 날짜(시간 타입)
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/8a0ebaf6-6b71-4bfd-bbaf-ad98f54af343/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;choice&lt;/code&gt;에는 선택지에 해당하는 질문(&lt;code class=&quot;highlighter-rouge&quot;&gt;외래키&lt;/code&gt;=&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt;의 내용을 참조하겠다, &lt;code class=&quot;highlighter-rouge&quot;&gt;CASCADE&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt;이 삭제가 되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;choice question&lt;/code&gt;도 삭제 하겠다), 투표수의 내용이 담겨 있음&lt;/li&gt;
  &lt;li&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;외래키&lt;/code&gt;에 대해서 더 살펴보면 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;에 여러개의 &lt;code class=&quot;highlighter-rouge&quot;&gt;foreignkey&lt;/code&gt;를 갖기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;1대 다 관계&lt;/code&gt;인 것을 확인할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;installed_apps에-pollsapp-추가하기&quot;&gt;INSTALLED_APPS에 polls.app 추가하기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c2a60564-3394-443d-b802-08554bbaf8ed/settings%E1%84%8B%E1%85%A6%20app%20%E1%84%8E%E1%85%AE%E1%84%80%E1%85%A1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;makemigration&quot;&gt;makemigration&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makemigration&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;을 작성해 놓은 것을 &lt;code class=&quot;highlighter-rouge&quot;&gt;mygration&lt;/code&gt;이라는 장소에 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;들을 데이터베이스 내에 테이블을 생성할 수 있도록 설계도를 만드는 작업
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/5a50512d-3443-4240-a10d-ec003cc92cfe/makemigration%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;실행 결과(&lt;code class=&quot;highlighter-rouge&quot;&gt;migration&lt;/code&gt; 디렉토리 안에 생성된 것을 확인할수 있음)
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/f1130235-aef0-458a-b14a-0fc4eb3ee5a4/%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8%E1%84%83%E1%85%A9.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;migrate&quot;&gt;migrate&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;migrate&lt;/code&gt;을 통해 실제 테이블 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api-가지고-놀기&quot;&gt;API 가지고 놀기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;API&lt;/code&gt;란 &lt;code class=&quot;highlighter-rouge&quot;&gt;개발자&lt;/code&gt;가 필요로하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터&lt;/code&gt;를 뽑아낼 수 있도록 만들어 놓은 함수 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;서버&lt;/code&gt;에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스&lt;/code&gt;에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터&lt;/code&gt;를 입력할 수 있도록 만들어 놓은 함수&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 진입
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ed889c19-4981-4d35-be11-a3a0eee1dd20/shell%20%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%8B%E1%85%B5%E1%86%B8.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;에 만들어 놓은 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt; 추가
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/795fe633-6774-424a-bcf7-e837329a311f/shell%20model%20%E1%84%8E%E1%85%AE%E1%84%80%E1%85%A1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;의 모든 내용 불러오기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question.object.all()&lt;/code&gt; - 현재 퀘스쳔 내의 모든 데이터를 가져와라&lt;/li&gt;
  &lt;li&gt;등록된 내용 없기 때문에 빈 내용 출력
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c1e4c2f2-c1fe-4216-a76e-8f4a4fa1ed55/question%20%E1%84%86%E1%85%A9%E1%84%83%E1%85%B3%E1%86%AB%20%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5%20%E1%84%87%E1%85%AE%E1%86%AF%E1%84%85%E1%85%A5%E1%84%8B%E1%85%A9%E1%84%80%E1%85%B5.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 내의 데이터 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 내에는 질문내용과 발행일이 존재&lt;/li&gt;
  &lt;li&gt;발행일 시간을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;timezone&lt;/code&gt; 라이브러리 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;q.id&lt;/code&gt; 는 함수에서 명시하지 않아도 장고에서 추가 해줌
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/de5489ad-869b-4d5c-8121-87b4b77555fc/question%E1%84%8B%E1%85%A6%20%E1%84%82%E1%85%A2%E1%84%8B%E1%85%AD%E1%86%BC%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;의 모든 내용 불러오기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt;에 표시된 1로는 어떤 데이터인지 구분이 안감
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ef171a9c-4f74-4da9-a651-90f1dc96049d/question%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC%20%E1%84%92%E1%85%AE%20object%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC%20%E1%84%80%E1%85%A7%E1%86%AF%E1%84%80%E1%85%AA.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;그렇기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__()&lt;/code&gt; 메소드를 모델 내에 심어주면 보고 싶은 문구를 볼 수 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__()&lt;/code&gt; 심어주기
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/463efce8-0a75-4fa7-b16e-322a60a5d504/__str__.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;저장하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;을 종료시킨 후 재실행해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 모든 내용을 불러오면
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c57e9c4c-f3bc-44e3-beb2-3adbb39c5d01/str%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC%E1%84%80%E1%85%A7%E1%86%AF%E1%84%80%E1%85%AA.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt; 결과를 볼 수 있다&lt;/li&gt;
  &lt;li&gt;추후 여러 실행결과를 리뷰할 예정&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="django" /><summary type="html">tutorial 2 review</summary></entry><entry><title type="html">001. Django - Django의 기본 흐름과 tutorial 1 review</title><link href="http://localhost:4000/001-django" rel="alternate" type="text/html" title="001. Django - Django의 기본 흐름과 tutorial 1 review" /><published>2021-03-25T00:00:00+09:00</published><updated>2021-03-25T00:00:00+09:00</updated><id>http://localhost:4000/001-django</id><content type="html" xml:base="http://localhost:4000/001-django">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;기본적으로 django, mysql이 설치되어 있는 상황 이후에 django에 대한
흐름을 이해하기 위한 글입니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;django-참고영상&quot;&gt;Django &lt;a href=&quot;https://www.youtube.com/watch?v=9WctwW_Pe1o&amp;amp;list=PLi4xPOplIq7d1vDdLBAvS5PmQR-p6KwUz&amp;amp;index=2&quot;&gt;(참고영상)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/48d6b494-94be-45d4-b6a1-33185322bb1d/django%201.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;django의-흐름&quot;&gt;django의 흐름&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;client&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;web application&lt;/code&gt;을 보기 위해서 요청&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Apache&lt;/code&gt;가 존재 이 둘은 흔히 &lt;strong&gt;상용 단계&lt;/strong&gt;에서 사용&lt;/li&gt;
  &lt;li&gt;장고에서는 개발을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;경량 개발 웹서버&lt;/code&gt;를 제공하고 있음&lt;/li&gt;
  &lt;li&gt;개발할때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;경량 개발 웹서버&lt;/code&gt;를 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WSGI&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹서버&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;장고 프레임워크&lt;/code&gt;를 연결하기 위해 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;가 넘어가고 사용자가 특정 주소를 요청하는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;url 파일&lt;/code&gt;에서 요청한 주소를 잘게 나눠줌 이 작업을 &lt;code class=&quot;highlighter-rouge&quot;&gt;parsing&lt;/code&gt;이라고 함&lt;/li&gt;
  &lt;li&gt;잘게 나눠진 주소들은 역할에 맞게 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;로 이동함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 어플리케이션&lt;/code&gt;에 각각 맞는 작업을 하기 위한 내가 만든 코드가 존재
    &lt;ul&gt;
      &lt;li&gt;EX) 요청받은 데이터를 저장, 데이터베이스에서 꺼내오는 데이터베이스 작업, pdf를 생성하는 작업이라던지 등등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 작업이 끝나면 디자인 작업인 &lt;code class=&quot;highlighter-rouge&quot;&gt;template&lt;/code&gt;으로 이동하고 사용자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;를 받게 된다&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;프로젝트와-앱의-차이&quot;&gt;프로젝트와 앱의 차이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysite&lt;/code&gt;와 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;앱&lt;/code&gt;의 묶음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;앱&lt;/code&gt;은 특정한 기능을 수행하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 어플리케이션&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;EX) 아이스크림 가게를 위한 앱을 만든다고 한다면, 1. 아이스크림 관리를 위한 관리 앱 2. 주문을 위한 주문 앱 3. 이벤트를 위한 이벤트 앱
특정 기능만 수행하는 앱을 각각 만들어서 프로젝트를 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;django-tutorial-1&quot;&gt;django tutorial 1&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/eba56302-eab9-4943-b5ff-decfe3776cb2/django%202.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;라는 앱 생성(투표를 담당하는 앱)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view.py&lt;/code&gt;를 작성하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;view.py&lt;/code&gt;를 호출하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;를 만들고, 경로?? 입력&lt;/li&gt;
  &lt;li&gt;최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;에 방금 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 연결&lt;/li&gt;
  &lt;li&gt;최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysite&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iclude&lt;/code&gt; 함수는 다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 참조할 수 있게 해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;여기까지-흐름&quot;&gt;여기까지 흐름&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;현재 최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;에 내가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt; 앱의 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 연결함&lt;/li&gt;
  &lt;li&gt;예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1/polls/&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;이 있다면 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;parsing&lt;/code&gt;해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;라는 해당 경로를 잡아내고 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls.urls&lt;/code&gt;로 연결시켜줌&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/polls/&lt;/code&gt; 앱 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls&lt;/code&gt;는 전달받고 이후에 아무것도 없기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view.index&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부로 연결 시켜줌&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; 함수에서는 내가 작성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;hello world&quot;&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;client&lt;/code&gt;에게 전달 해줌&lt;/li&gt;
&lt;/ol&gt;</content><author><name>hiyee</name></author><category term="django" /><summary type="html">기본적으로 django, mysql이 설치되어 있는 상황 이후에 django에 대한 흐름을 이해하기 위한 글입니다</summary></entry><entry><title type="html">016. Python - list comprehensions, lambda expressions</title><link href="http://localhost:4000/016-python" rel="alternate" type="text/html" title="016. Python - list comprehensions, lambda expressions" /><published>2021-03-24T00:00:00+09:00</published><updated>2021-03-24T00:00:00+09:00</updated><id>http://localhost:4000/016-python</id><content type="html" xml:base="http://localhost:4000/016-python">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Basic &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;
    &lt;a href=&quot;./001-python&quot;&gt;001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./002-python&quot;&gt;002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./003-python&quot;&gt;003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./004-python&quot;&gt;004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./005-python&quot;&gt;005. Python - if, for, while, continue와 break, 한 줄 for&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./006-python&quot;&gt;006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자,
      지역변수와 전역변수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./007-python&quot;&gt;007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./008-python&quot;&gt;008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드
      오버라이딩, pass, super&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./009-python&quot;&gt;009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./010-python&quot;&gt;010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치,
      pip install, 내장함수, 외장함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./011-python&quot;&gt;011. Python - hash&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./012-python&quot;&gt;012. Python - Argument&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./013-python&quot;&gt;013. Python - Argument assignment&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./014-python&quot;&gt;014. Python - sys.modules, sys.path / absolute path, relative path /
      package&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./015-python&quot;&gt;015. Python - Assignment 49-58&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./016-python&quot;&gt;016. Python - list comprehensions, lambda expressions&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;python-advanced&quot;&gt;Python Advanced&lt;/h2&gt;

&lt;h3 id=&quot;list-comprehension&quot;&gt;list comprehension&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;[ 표현식 for 원소 in 반복 가능한 객체 ]&lt;/li&gt;
  &lt;li&gt;[ 표현식 for 원소 in 반복 가능한 객체 if문 ]&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;assignment-1&quot;&gt;Assignment 1&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다음과 같은 도시목록의 리스트가 주어졌을때, 도시이름이 S로 시작하지 않는 도시만 리스트로 만들 때 리스트 컴프리헨션을 사용하여 함수를 작성해 보세요&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;cities&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Tokyo&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Shanghai&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Jakarta&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Seoul&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Guangzhou&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Beijing&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Karachi&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Shenzhen&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Delhi&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;citylst&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;cities&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;&quot;S&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citylst&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;assignment-2&quot;&gt;Assignment 2&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다음과 같은 도시, 인구수가 튜플의 리스트로 주어졌을때, 키가 도시, 값이 인구수인 딕셔너리를 딕셔너리 컴프리헨션을 사용한 함수를 작성해 보세요&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;population_of_city&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Tokyo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;36923000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Shanghai'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;34000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Jakarta'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;30000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Seoul'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25514000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Guangzhou'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;25000000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Beijing'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24900000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Karachi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24300000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Shenzhen'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;23300000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'Delhi'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;21753486&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)]&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;citydic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;population_of_city&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;citydic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;lambda-expressions&quot;&gt;Lambda expressions&lt;/h3&gt;

&lt;h4 id=&quot;assignment&quot;&gt;Assignment&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;다음과 같이 비밀번호의 길이와 대문자가 포함된것을 확인하는 간단한 함수가 있습니다&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SHORT_PASSWORD'&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isupper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NO_CAPITAL_LETTER_PASSWORD'&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;풀이&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;lambdas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'SHORT_PASSWORD'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'NO_CAPITAL_LETTER_PASSWORD'&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;isupper&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;check_password_using_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lambdas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;is&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;None&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;


&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check_password_using_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;            &lt;span class=&quot;c&quot;&gt;# SHORT_PASSWORD&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check_password_using_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'12356789f'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;      &lt;span class=&quot;c&quot;&gt;# NO_CAPITAL_LETTER_PASSWORD&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;check_password_using_lambda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'123456789fF'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;c&quot;&gt;# True&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>hiyee</name></author><category term="python" /><summary type="html">Python Basic 001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석 002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수 003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자 004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경 005. Python - if, for, while, continue와 break, 한 줄 for 006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자, 지역변수와 전역변수 007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with 008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드 오버라이딩, pass, super 009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally 010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치, pip install, 내장함수, 외장함수 011. Python - hash 012. Python - Argument 013. Python - Argument assignment 014. Python - sys.modules, sys.path / absolute path, relative path / package 015. Python - Assignment 49-58 016. Python - list comprehensions, lambda expressions</summary></entry><entry><title type="html">004. MySQL programmers 2단계 리뷰</title><link href="http://localhost:4000/004-mysql" rel="alternate" type="text/html" title="004. MySQL programmers 2단계 리뷰" /><published>2021-03-24T00:00:00+09:00</published><updated>2021-03-24T00:00:00+09:00</updated><id>http://localhost:4000/004-mysql</id><content type="html" xml:base="http://localhost:4000/004-mysql">&lt;h2 id=&quot;mysql-2단계-리뷰&quot;&gt;MySQL 2단계 리뷰&lt;/h2&gt;

&lt;h3 id=&quot;최솟값-구하기&quot;&gt;최솟값 구하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;order by&lt;/code&gt;를 통해서 정렬 시킨 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;limit&lt;/code&gt;를 통해 맨 위의 값을 추출한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;갯수-구하기&quot;&gt;갯수 구하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;COUNT&lt;/code&gt;를 통해서 추출한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;null-처리하기&quot;&gt;NULL 처리하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;IFNULL&lt;/code&gt;을 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;IFNULL(사용할 컬럼, &quot;NULL일 경우 표시할 값&quot;)&lt;/code&gt;의 형태로 추출한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;그룹-조건에-해당하는-값-추출하기&quot;&gt;그룹 조건에 해당하는 값 추출하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;SELECT &lt;code class=&quot;highlighter-rouge&quot;&gt;추출하고자 하는 컬럼&lt;/code&gt;
FROM &lt;code class=&quot;highlighter-rouge&quot;&gt;테이블명&lt;/code&gt;
WHERE &lt;code class=&quot;highlighter-rouge&quot;&gt;조건&lt;/code&gt;
GROUP BY &lt;code class=&quot;highlighter-rouge&quot;&gt;그룹할 컬럼&lt;/code&gt;
HAVING &lt;code class=&quot;highlighter-rouge&quot;&gt;그룹에 적용할 조건&lt;/code&gt;
ORDER BY &lt;code class=&quot;highlighter-rouge&quot;&gt;정렬 기준&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;hour시-추출하기&quot;&gt;HOUR(시) 추출하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HOUR&lt;/code&gt;(시간을 추출할 값)의 형태로 &lt;code class=&quot;highlighter-rouge&quot;&gt;시&lt;/code&gt; 추출&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;조건-in&quot;&gt;조건 IN&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WHERE NAME IN (“Lucy”, “Ella”, “Pickle”, “Rogan”, “Sabrina”, “Mitty”)의 형태로 값 추출 가능&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;조건-like&quot;&gt;조건 LIKE&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;WHERE (NAME like “%el%” OR NAME like “%EL%”) AND ANIMAL_TYPE = “Dog”
    &lt;ul&gt;
      &lt;li&gt;앞 뒤 &lt;code class=&quot;highlighter-rouge&quot;&gt;%&lt;/code&gt;를 통해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;LIKE&lt;/code&gt;로 유사한 값을 모두 추출할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;case-함수&quot;&gt;CASE 함수&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;CASE WHEN&lt;/code&gt;(조건) SEX_UPON_INTAKE(컬럼) LIKE “%Neutered%” or SEX_UPON_INTAKE LIKE “%Spayed%” &lt;code class=&quot;highlighter-rouge&quot;&gt;THEN(조건에 해당한다면)&lt;/code&gt; “O” &lt;code class=&quot;highlighter-rouge&quot;&gt;ELSE(그렇지 않다면)&lt;/code&gt; “X” &lt;code class=&quot;highlighter-rouge&quot;&gt;END(함수 종료)&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;날짜-변환&quot;&gt;날짜 변환&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;DATE_FORMAT&lt;/code&gt;(DATETIME(날짜 값), &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;%Y-%m-%d&quot;(원하는 값 형태)&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="database" /><summary type="html">MySQL 2단계 리뷰</summary></entry><entry><title type="html">003. MySQL programmers 1단계 리뷰</title><link href="http://localhost:4000/003-mysql" rel="alternate" type="text/html" title="003. MySQL programmers 1단계 리뷰" /><published>2021-03-24T00:00:00+09:00</published><updated>2021-03-24T00:00:00+09:00</updated><id>http://localhost:4000/003-mysql</id><content type="html" xml:base="http://localhost:4000/003-mysql">&lt;h2 id=&quot;1단계-테스트-리뷰&quot;&gt;1단계 테스트 리뷰&lt;/h2&gt;

&lt;h3 id=&quot;sql-문법순서&quot;&gt;SQL 문법순서&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/b8eaa497-5219-4809-bcd0-d5b841843f13/sql%20%E1%84%86%E1%85%AE%E1%86%AB%E1%84%87%E1%85%A5%E1%86%B8%20%E1%84%89%E1%85%AE%E1%86%AB%E1%84%89%E1%85%A5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;sql-실행순서&quot;&gt;SQL 실행순서&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/919212f9-9bf3-46f8-bda4-07ef84dc254c/sql.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FROM&lt;/code&gt; 에서 테이블 확인 -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt; 검색조건에 따라 데이터추출 -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;GROUP BY&lt;/code&gt; 행의 고유값을 그룹으로 정리 -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;HAVING&lt;/code&gt; 검색조건에 따라 추가로 제외 -&amp;gt;
&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT&lt;/code&gt; 에서 출력할 컬럼들을 확인한다 -&amp;gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt; 정렬을 해준다음 출력&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;상위-n개-레코드&quot;&gt;상위 n개 레코드&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;이 부분은 &lt;code class=&quot;highlighter-rouge&quot;&gt;ORACLE&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;의 문법이 다르다고 한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;의 문법으로 정리
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;의 경우 : 값을 조회하는데 가장 맨 위 행 1개만을 조회하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;LIMIT&lt;/code&gt; 구문을 사용해야 합니다.
        &lt;ul&gt;
          &lt;li&gt;LIMIT 1 : 맨 위에서부터 1개까지의 정보 조회&lt;/li&gt;
          &lt;li&gt;LIMIT 3 : 맨 위에서부터 3개까지의 정보 조회&lt;/li&gt;
          &lt;li&gt;LIMIT 2, 6 : 위에서 2번째부터 6번째까지의 정보 조회&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ORDER BY&lt;/code&gt;와 함께 활용해서 원하는 값 출력하는 문제 해결&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;sql-count&quot;&gt;SQL COUNT&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;전체 행 갯수 가져오기
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(*) FROM 테이블;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컬럼 데이터 갯수 가져오기
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(컬럼) FROM 테이블;&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;컬럼 네임 지정해서 가져오기
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(*) as cnt FROM hero_collection;&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;cnt&lt;/code&gt;라는 이름의 컬럼명으로 자료를 가져오는 모습&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;나중에 나온 문제에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt;와 함께 써서 해결하는 문제도 있었다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;null&quot;&gt;NULL&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt;을 처리하기 위해선 &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE&lt;/code&gt;을 사용한다
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM TEST WHERE NAME IS NULL&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;NULL&lt;/code&gt; 값인 &lt;code class=&quot;highlighter-rouge&quot;&gt;NAME&lt;/code&gt;을 불러오는 예제&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM TEST WHERE NAME IS NOT NULL&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT * FROM TEST WHERE NOT NAME IS NULL&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;위의 두 경우처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;NOT NULL&lt;/code&gt;을 이용하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;WHERE NOT&lt;/code&gt;을 이용해 조건으로 해결할 수도 있다&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;distinct중복-제거&quot;&gt;DISTINCT(중복 제거)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;앞서 설명했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;DISTINCT&lt;/code&gt; 사용법
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT DISTINCT * FROM TEST&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;중복 값만 해결하고 값을 가져오는 예제&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;SELECT COUNT(DISTINCT *) FROM TEST&lt;/code&gt;
        &lt;ul&gt;
          &lt;li&gt;중복 값을 해결하고 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt; 하는 예제(&lt;code class=&quot;highlighter-rouge&quot;&gt;count&lt;/code&gt;와 함께 쓸 때 문법이 헷갈려 예제로 넣어봅니다)&lt;/li&gt;
        &lt;/ul&gt;
      &lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="database" /><summary type="html">1단계 테스트 리뷰</summary></entry><entry><title type="html">002. Database - normalization</title><link href="http://localhost:4000/002-database" rel="alternate" type="text/html" title="002. Database - normalization" /><published>2021-03-23T00:00:00+09:00</published><updated>2021-03-23T00:00:00+09:00</updated><id>http://localhost:4000/002-database</id><content type="html" xml:base="http://localhost:4000/002-database">&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/77666619-ba44-4a09-a078-ba81cb649e0a/%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%80%E1%85%B2%E1%84%92%E1%85%AA.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;UNF&lt;/code&gt;는 정규화가 진행되지 않은 데이터 상태이다&lt;/li&gt;
  &lt;li&gt;각 정규화 단계에 해당하는 조건이 왼쪽에 조건으로 표기되어 있다&lt;/li&gt;
  &lt;li&gt;주로 많이 쓰이는 정규화 3단계에 대해서 공부한 내용을 정리하는 글이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;1-정규화&quot;&gt;1 정규화&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ada33d55-e5b0-4854-932d-3b6f9d904da5/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 정규형&lt;/code&gt;의 조건은 &lt;code class=&quot;highlighter-rouge&quot;&gt;atomic columns&lt;/code&gt; - 각각의 컬럼이 하나의 값을 가지는 것이다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/d3f4f160-e233-4308-ad4a-c6a9cea3bb77/8.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;만약 위 상황에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;tag column&lt;/code&gt;를 정렬할 때 어떤 값으로 정렬할 것인가&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;join&lt;/code&gt;할 때도 어려움 발생
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/295f9782-6e19-45f9-baad-fcc2763fb7e7/2.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;이런식으로 해결하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;1 정규형&lt;/code&gt;은 만족하지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;tag column&lt;/code&gt;을 제외한 다른 부분에서 정보가 중복되는 것을 확인할 수 있다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c7de2a3c-8f6e-4f11-b061-02b015083b91/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;위 방법또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;1 정규형&lt;/code&gt;은 만족하지만, 만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;가 추가되거나 하나가 삭제되면 낭비되는 부분이 발생한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/dfda1e76-ab7f-442d-898b-e16c947b9bf4/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;1 정규화&lt;/code&gt;를 진행시킨 모습이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;topic&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;tag&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;다대다 관계&lt;/code&gt;이므로 중간 테이블을 생성해서 연결해준다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;2-정규화&quot;&gt;2 정규화&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/954e96fe-77d3-433b-a581-309aff261acb/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;조건 : 테이블에 부분 종속되는 값이 없어야 한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/110bdc7e-aa6c-4f14-af1a-bff29e0e6851/2.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;위 테이블을 보면 빨간부분의 정보가 중복되는 것을 알 수 있다&lt;/li&gt;
  &lt;li&gt;중복된 부분은 &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; 이라는 컬럼에 부분적으로 종속되고 있다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;price&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;에 따라서 달라진다&lt;/li&gt;
  &lt;li&gt;부분적으로 종속되는 정보와 전체에 종속되는 정보를 나눈다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/16c1d79c-4e37-4f3b-8a3e-49963e206c6d/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;에 부분 종속되는 값을 테이블로 나누고 중복 값을 제거한 모습
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/98758d37-2190-45bb-ad6b-2bf741c58fd3/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;에 종속되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;price&lt;/code&gt; 또한 테이블로 나눈 모습&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;제 2 정규형&lt;/code&gt;이 완성된 모습&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;3-정규화&quot;&gt;3 정규화&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/317c1f43-8dfb-409f-8545-3a5c04249c5d/1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;조건 : 이행적 종속성을 제거 해야 함
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/9ff1d09c-9ea5-488c-b516-ac69b342304e/2.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;author_name&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;author_profile&lt;/code&gt; 은 &lt;code class=&quot;highlighter-rouge&quot;&gt;author _id&lt;/code&gt; 에 의존하고 있다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;author_id&lt;/code&gt; 는 &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;에 의존하고 있다&lt;/li&gt;
  &lt;li&gt;이 상황을 이행적 종속성이라고 한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/30041b73-4f6d-40fe-9a1f-b131c509c695/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;중복된 값인 것을 볼 수 있다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/fcf39504-e09a-4a4e-a7f0-c604f306102a/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;author&lt;/code&gt; 테이블을 형성해서 중복된 값을 삭제해준다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;topic&lt;/code&gt; 테이블을 형성해서 값들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt;과 관련된 값을 불러오고 각각의 &lt;code class=&quot;highlighter-rouge&quot;&gt;row&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;author&lt;/code&gt; 테이블의 어떤 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;인지 알려주는 &lt;code class=&quot;highlighter-rouge&quot;&gt;author_id&lt;/code&gt; 또한 가져온다&lt;/li&gt;
  &lt;li&gt;제 3 정규형까지 만족하는 상태&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;정규화-파악-팁&quot;&gt;정규화 파악 팁&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;author_id&lt;/code&gt;가 없었다고 하더라도 중복된 값이 있었다면 내부적으로 이행적 종속성을 가졌다고 생각해서 분리한다&lt;/li&gt;
  &lt;li&gt;그러지 않더라도 &lt;code class=&quot;highlighter-rouge&quot;&gt;column&lt;/code&gt; 이름에 중복된 앞 명칭(author)이 있을 경우 떨어뜨려야 한다고 가정하고 살펴본다&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="database" /><summary type="html"></summary></entry><entry><title type="html">015. Python - Assignment 49-58</title><link href="http://localhost:4000/015-python" rel="alternate" type="text/html" title="015. Python - Assignment 49-58" /><published>2021-03-20T00:00:00+09:00</published><updated>2021-03-20T00:00:00+09:00</updated><id>http://localhost:4000/015-python</id><content type="html" xml:base="http://localhost:4000/015-python">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Basic &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;
    &lt;a href=&quot;./001-python&quot;&gt;001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./002-python&quot;&gt;002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./003-python&quot;&gt;003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./004-python&quot;&gt;004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./005-python&quot;&gt;005. Python - if, for, while, continue와 break, 한 줄 for&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./006-python&quot;&gt;006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자,
      지역변수와 전역변수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./007-python&quot;&gt;007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./008-python&quot;&gt;008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드
      오버라이딩, pass, super&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./009-python&quot;&gt;009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./010-python&quot;&gt;010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치,
      pip install, 내장함수, 외장함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./011-python&quot;&gt;011. Python - hash&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./012-python&quot;&gt;012. Python - Argument&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./013-python&quot;&gt;013. Python - Argument assignment&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./014-python&quot;&gt;014. Python - sys.modules, sys.path / absolute path, relative path /
      package&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./015-python&quot;&gt;015. Python - Assignment 49-58&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./016-python&quot;&gt;016. Python - list comprehensions, lambda expressions&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;assignment-review49-58&quot;&gt;Assignment review(49-58)&lt;/h2&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;문제 해결 중 고민한 내용 정리하는 글입니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;49&quot;&gt;49&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/afaf9e6d-58c2-4b58-88a0-6693e5614fa7/while%20%E1%84%81%E1%85%AE%E1%86%AF%E1%84%90%E1%85%B5%E1%86%B8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;해결하는 과정에서 논리적인 사고는 끝을 냈는데 구현한 대로 값이 나오질 않아서 고생했다(두 가지 문제더라)&lt;/li&gt;
  &lt;li&gt;첫 번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;while&lt;/code&gt; 구문에서 반복되는 값 &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt;에 대해서 계속 값을 더해주는 변환식을 꼼꼼히 넣어줘야 한다&lt;/li&gt;
  &lt;li&gt;두 번째 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 값 위치 좀 잘봐라 제발;;; 이상한 곳에서 시간 쓰더라&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;50&quot;&gt;50&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/a6693614-4ede-449e-8e6f-d29b3aa87422/50.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;본래 의도는 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;문을 중첩시켜서 해결하는 것일 수도 있지만, 내가 하던 방식대로 해결함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;51&quot;&gt;51&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt; 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt;를 덧씌워 값을 찾기 쉽게 하는 방법이다&lt;/li&gt;
  &lt;li&gt;문제해결은 어렵지 않았으나, 자료를 입력하는게 더 힘들다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;52&quot;&gt;52&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/aab1cbaf-9e79-43f0-bd90-04d31299bf2d/52.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;엄청 고생한 문제다(두 번째 함수에서)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt; 값을 키워드 가변인자로 받은 후 처리하는 모습이다&lt;/li&gt;
  &lt;li&gt;원하는 키와 값을 받아낼 &lt;code class=&quot;highlighter-rouge&quot;&gt;compile&lt;/code&gt;을 선언한 후 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;문으로 처리한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;문을 빠져나와!!!!!!!!(여기서 실수했다 &lt;code class=&quot;highlighter-rouge&quot;&gt;for&lt;/code&gt;문 안에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;를 처리해서 자꾸 값이 하나만 나옴;;)&lt;/li&gt;
  &lt;li&gt;마지막 실수는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt;에서 키에 해당하는 값 빼올때 키가 &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt; 형태였는데 그냥 써서 오류났다(주의하자!!!!!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;53&quot;&gt;53&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;중첩함수에 대한 내용이다(문제 해결은 어렵지 않으나, 구현 과정에 대해서 다시 복습해 보자)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;54&quot;&gt;54&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;scope&lt;/code&gt;에 대한 문제였다(뒤의 문제에서도 이걸 해결하려고 함부로 전역함수로 전환했다가 오류가 발생했다..흠… 원인은 아직 파악하지 못한 상태이다)&lt;/li&gt;
  &lt;li&gt;어렵지 않은 내용이지만 기본중에 기본인 내용이라 생각한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;55&quot;&gt;55&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/3a3fc231-bb64-4650-ae9d-f39b29b6f75d/55.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;앞서 말했던 전역함수를 함부로 써서 고생한 문제다&lt;/li&gt;
  &lt;li&gt;원리에 대해선 여러번 반복 사고한 끝에 이해했지만, 구현 과정에서 디테일이 필요한 기술이다&lt;/li&gt;
  &lt;li&gt;내가 계속 오류를 범한 과정은 받아온 값 중 원하는 값에 대한 처리과정이었다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;를 잘 활용해서 해결해야 한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;58&quot;&gt;58&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;예외처리에 대한 내용이었다&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="python" /><summary type="html">Python Basic 001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석 002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수 003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자 004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경 005. Python - if, for, while, continue와 break, 한 줄 for 006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자, 지역변수와 전역변수 007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with 008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드 오버라이딩, pass, super 009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally 010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치, pip install, 내장함수, 외장함수 011. Python - hash 012. Python - Argument 013. Python - Argument assignment 014. Python - sys.modules, sys.path / absolute path, relative path / package 015. Python - Assignment 49-58 016. Python - list comprehensions, lambda expressions</summary></entry><entry><title type="html">014. Python - sys.modules, sys.path / absolute path, relative path / package</title><link href="http://localhost:4000/014-python" rel="alternate" type="text/html" title="014. Python - sys.modules, sys.path / absolute path, relative path / package" /><published>2021-03-20T00:00:00+09:00</published><updated>2021-03-20T00:00:00+09:00</updated><id>http://localhost:4000/014-python</id><content type="html" xml:base="http://localhost:4000/014-python">&lt;p&gt;&lt;span class=&quot;table-of-contents-list&quot;&gt;Python Basic &lt;/span&gt;&lt;/p&gt;
&lt;ul class=&quot;table-of-contents-list&quot;&gt;
  &lt;li&gt;
    &lt;a href=&quot;./001-python&quot;&gt;001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./002-python&quot;&gt;002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./003-python&quot;&gt;003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./004-python&quot;&gt;004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./005-python&quot;&gt;005. Python - if, for, while, continue와 break, 한 줄 for&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./006-python&quot;&gt;006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자,
      지역변수와 전역변수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./007-python&quot;&gt;007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./008-python&quot;&gt;008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드
      오버라이딩, pass, super&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./009-python&quot;&gt;009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./010-python&quot;&gt;010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치,
      pip install, 내장함수, 외장함수&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./011-python&quot;&gt;011. Python - hash&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./012-python&quot;&gt;012. Python - Argument&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./013-python&quot;&gt;013. Python - Argument assignment&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./014-python&quot;&gt;014. Python - sys.modules, sys.path / absolute path, relative path /
      package&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./015-python&quot;&gt;015. Python - Assignment 49-58&lt;/a&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;a href=&quot;./016-python&quot;&gt;016. Python - list comprehensions, lambda expressions&lt;/a&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;sysmodules&quot;&gt;sys.modules&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;파이썬이 모듈이나 package를 찾기위해 가장 먼저 확인하는 곳&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sys.modules&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt; 형태&lt;/li&gt;
  &lt;li&gt;한 번 실행된 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;된 &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt;들을 저장(한 번 실행된 &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt;들을 다시 찾지 않도록 하는 기능)&lt;/li&gt;
  &lt;li&gt;로 import 하는 모듈은 &lt;code class=&quot;highlighter-rouge&quot;&gt;sys.modules&lt;/code&gt; 에서 찾을 수 없음&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;syspath&quot;&gt;sys.path&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sys.path&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; 요소들을 가지고 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt; 형태&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;string&lt;/code&gt; 요소들은 경로를 나타냄&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;''&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/bin'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python36.zip'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python3.6'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python3.6/lib-dynload'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python3.6/site-packages'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python3.6/site-packages/aeosa'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/anaconda3/lib/python3.6/site-packages/IPython/extensions'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
 &lt;span class=&quot;s&quot;&gt;'/Users/song-eun-u/.ipython'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;list&lt;/code&gt;의 각 경로를 하나 하나 확인하면서 해당 경로에 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 하고자 하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt;가 위치해 있는지 확인&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;1-sysmodules-syspath-차이&quot;&gt;1. sys.modules sys.path 차이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sys.modules&lt;/code&gt;는 한번도 실행하지 못한 &lt;code class=&quot;highlighter-rouge&quot;&gt;module&lt;/code&gt;이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt;의 정보를 가지고 있지 않지만 &lt;code class=&quot;highlighter-rouge&quot;&gt;sys.path&lt;/code&gt;는 경로에 저장되어 있다면 찾아낼 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;2-sys-도-import-해야하는-모듈입니다-파이썬은-sys-모듈의-위치를-어떻게-찾을-수-있을까요&quot;&gt;2. sys 도 import 해야하는 모듈입니다. 파이썬은 sys 모듈의 위치를 어떻게 찾을 수 있을까요?&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;sys&lt;/code&gt; 모듈은 파이썬에 내장되어 있는 모듈로 파이썬 내부에 저장되어있다&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;sys&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builtin_module_names&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;builtin module&lt;/code&gt;의 목록을 불러와서 확인할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;3-absolute-path와-relative-path의-차이점을-서술해-주세요&quot;&gt;3. Absolute path와 relative path의 차이점을 서술해 주세요.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Absolute path&lt;/code&gt;의 경우 나의 위치와 관계없이 원하는 곳이 어떤 경로 안에 위치해 있는지 지정해서 움직이는 방면, &lt;code class=&quot;highlighter-rouge&quot;&gt;relative path&lt;/code&gt;는 현재 나의 위치를 기준으로 이동하고 싶은 위치로 이동하는 방법이기 때문에, 아무래도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Absolute path&lt;/code&gt; 보다는 헷갈릴 가능성이 존재한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;4-calculator-패키지-만들기&quot;&gt;4. calculator 패키지 만들기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/a3452df2-807f-47d1-b5f9-22462c5269bc/calculator.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;5-mainpy에서-상대경로로-add_and_mutiply-를-임포트-했을-때-발생하는-에러를-확인하고-다음의-파이썬-공식-문서를-참고해서-main-module-에서는-패키지의-모듈을-어떻게-임포트-해야하는지-블로깅-해주세요&quot;&gt;5. main.py에서 상대경로로 add_and_mutiply 를 임포트 했을 때 발생하는 에러를 확인하고, 다음의 파이썬 공식 문서를 참고해서 main module 에서는 패키지의 모듈을 어떻게 임포트 해야하는지 블로깅 해주세요.&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/44ec503c-158d-4aeb-a1a9-71b697caca57/%E1%84%89%E1%85%A1%E1%86%BC%E1%84%83%E1%85%A2%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A9.png&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/f195b31e-4d8b-4095-9b7d-8c4cf350efd9/%E1%84%80%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A9%20%E1%84%8B%E1%85%A6%E1%84%85%E1%85%A5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;참고 자료를 살펴 보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;relative path&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;는 현재의 모듈을 기반으로 이루어진다. 직접 실행하는 모듈(메인 모듈)의 이름은 항상 “__main__“이고, 파이썬에서 메인 모듈은 항상 &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute path&lt;/code&gt;를 사용해야하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;relative path&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;absolute path&lt;/code&gt;로 설정해주면 된다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/b19ee538-bd2e-4f57-84d8-feac4826b35d/%E1%84%8C%E1%85%A5%E1%86%AF%E1%84%83%E1%85%A2%20%E1%84%80%E1%85%A7%E1%86%BC%E1%84%85%E1%85%A9.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;값이 5로 잘 출력되는 상황이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;6-add_and_multiplypy에서-multiply함수를-절대경로와-상대경로도-각각-임포트-해보고-main-모듈과-차이점을-생각해보고-결과를-출력해-보세요&quot;&gt;6. add_and_multiply.py에서 multiply함수를 절대경로와 상대경로도 각각 임포트 해보고 main 모듈과 차이점을 생각해보고 결과를 출력해 보세요.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;상대 경로와 절대 경로 모두 결과를 잘 출력해 준다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;add_and_multiply.py&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;\__main__.py&lt;/code&gt;가 아니기 때문에 절대 경로든 상대 경로든 문제 없이 동작한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;7-initpy-파일의-역할에-대해서도-정리해서-블로깅-해주세요&quot;&gt;7. &lt;strong&gt;init&lt;/strong&gt;.py 파일의 역할에 대해서도 정리해서 블로깅 해주세요.&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\__init__.py&lt;/code&gt;가 존재하는 디렉토리는 패키지의 일부임을 알려주는 역할을 한다&lt;/li&gt;
  &lt;li&gt;package 초기 설정을 할 수 있는 역할을 한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;\__init__.py&lt;/code&gt; 파일이 존재하지 않는다면 패키지의 일부인지 인식을 하지 못해 속성을 가지고 있지 않는다는 에러가 발생&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt; 실행 시 설정해주고 싶은 초기 설정이 있다면 이 파일에 초기 설정에 관련된 코드들을 작성하면 작성 한 코드의 내용대로 &lt;code class=&quot;highlighter-rouge&quot;&gt;package&lt;/code&gt; 실행 시 자동으로 실행&lt;/li&gt;
&lt;/ul&gt;</content><author><name>hiyee</name></author><category term="python" /><summary type="html">Python Basic 001. Python - 숫자 자료형, 문자열 자료형, boolean 자료형, 변수, 주석 002. Python - 연산자, 간단한 수식, 숫자처리함수, 랜덤함수 003. Python - 문자열, 슬라이싱, 문자열처리함수, 문자열포맷, 탈출문자 004. Python - 리스트, 사전, 튜플, 세트, 자료구조의 변경 005. Python - if, for, while, continue와 break, 한 줄 for 006. Python - 함수, 전달값과 반환값, 기본값, 키워드값, 가변인자, 지역변수와 전역변수 007. Python - 표준입출력, 다양한 출력포맷, 파일입출력, pickle, with 008. Python - 클래스, __init__, 멤버변수, 메소드, 상속, 다중상속, 메소드 오버라이딩, pass, super 009. Python - 예외처리, 에러 발생시키기, 사용자 정의 예외처리, finally 010. Python - 모듈, 패키지, __all__, 모듈 직접 실행, 패키지와 모듈 위치, pip install, 내장함수, 외장함수 011. Python - hash 012. Python - Argument 013. Python - Argument assignment 014. Python - sys.modules, sys.path / absolute path, relative path / package 015. Python - Assignment 49-58 016. Python - list comprehensions, lambda expressions</summary></entry></feed>