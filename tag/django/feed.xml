<?xml version="1.0" encoding="utf-8"?>

<feed xmlns="http://www.w3.org/2005/Atom" >
  <generator uri="https://jekyllrb.com/" version="3.7.4">Jekyll</generator>
  <link href="http://localhost:4000/tag/django/feed.xml" rel="self" type="application/atom+xml" />
  <link href="http://localhost:4000/" rel="alternate" type="text/html" />
  <updated>2021-04-10T14:39:27+09:00</updated>
  <id>http://localhost:4000/tag/django/feed.xml</id>

  
  
  

  
    <title type="html">Hiyee Blog | </title>
  

  
    <subtitle>Developer with good Influence</subtitle>
  

  

  
    
      
    
  

  
  

  
    <entry>
      <title type="html">009. Django - westagram 3 review</title>
      <link href="http://localhost:4000/009-django" rel="alternate" type="text/html" title="009. Django - westagram 3 review" />
      <published>2021-04-10T00:00:00+09:00</published>
      <updated>2021-04-10T00:00:00+09:00</updated>
      <id>http://localhost:4000/009-django</id>
      <content type="html" xml:base="http://localhost:4000/009-django">&lt;h2 id=&quot;westagram-3-review&quot;&gt;westagram 3 review&lt;/h2&gt;

&lt;h3 id=&quot;post게시물-등록-및-불러오기&quot;&gt;Post(게시물 등록 및 불러오기)&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;새로운 앱을 만들었고, &lt;code class=&quot;highlighter-rouge&quot;&gt;settings&lt;/code&gt; 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;installed&lt;/code&gt;에 추가해 줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;modelspy-작성&quot;&gt;models.py 작성&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/d44f8cae-7e5f-478d-ba7e-d671fdb7c7b3/%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3%E1%84%86%E1%85%A9%E1%84%83%E1%85%A6%E1%86%AF.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Post&lt;/code&gt; 모델과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Comment&lt;/code&gt; 모델 작성
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;comment&lt;/code&gt;의 경우 프론트엔드와 통신까지 해보진 못했으므로 이번 리뷰에서 제외합니다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;author&lt;/code&gt; 컬럼에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;users&lt;/code&gt; 앱의 &lt;code class=&quot;highlighter-rouge&quot;&gt;User&lt;/code&gt; 테이블을 참조하도록 설정
    &lt;ul&gt;
      &lt;li&gt;같은 프로젝트 안의 앱이라면 경로 설정해주지 않아도 테이블을 사용할 수 있음&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;image&lt;/code&gt; 필드의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 받아야 하므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;max_length&lt;/code&gt;를 길게 설정해 줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;decorator-작성&quot;&gt;decorator 작성&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;앞서 했던 리뷰에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt;의 특징으로 한번 수행한 내용에 대해서 기억하지 않는다는 것을 말했다 로그인 이후 사용자가 매번 어떤 작업을 수행할 때마다 재로그인할 수 없기 때문에 인증 때 발행한 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 통해서 사용자가 로그인 상태임을 확인한다&lt;/li&gt;
  &lt;li&gt;모든 로직에 인가과정을 기록하면 코드 가독성이 떨어지고, 개발하는 시간도 비효율적으로 증가할 것이다&lt;/li&gt;
  &lt;li&gt;때문에 등장한 &lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt;형식으로 인가하는 과정을 구현하고, 각 로직앞에 &lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt;를 가져와 사용해서 인가를 하는 방식이다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/8806c7b8-2c8d-48f3-90b2-58db85d25443/%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3%E1%84%83%E1%85%A6%E1%84%8F%E1%85%A9%E1%84%85%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%89%E1%85%A7%E1%86%AB.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;에 담긴 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt; 해줘야 하기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;jwt&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt;할 때 사용했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;secret_key&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;algorithm&lt;/code&gt;을 가져온다
    &lt;ul&gt;
      &lt;li&gt;&lt;strong&gt;여기서 주의할 점&lt;/strong&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt; 할 때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;algorithm=내가 설정한 알고리즘&lt;/code&gt;이었다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;algorithms=내가 설정한 알고리즘&lt;/code&gt;으로 작성해야 한다&lt;/li&gt;
      &lt;li&gt;위 사진에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;headers&lt;/code&gt;에 담긴 토큰을 가져올 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;Authorization&lt;/code&gt;을 사용한 것을 알 수 있다 - &lt;strong&gt;이 &lt;code class=&quot;highlighter-rouge&quot;&gt;Authorization&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;의&lt;code class=&quot;highlighter-rouge&quot;&gt;corsheaders&lt;/code&gt; 설정에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;allowed headers&lt;/code&gt;안의 값이었다, 즉 임의로 바꿔서 프론트엔드와 맞춘다고 해서 작동하지 않는다!!!!&lt;/strong&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/e1d548ec-060f-4328-a7fd-da822d497c81/%E1%84%8B%E1%85%A5%E1%84%8A%E1%85%A5%E1%86%AF%E1%84%85%E1%85%A1%E1%84%8B%E1%85%B5%E1%84%8C%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%89%E1%85%A7%E1%86%AB.png&quot; alt=&quot;&quot; /&gt; - 추가하자면, 컨벤션인 듯 하다, 따로 바꿔서 사용하려는 시도는 하지 말자&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt;하면 내가 &lt;code class=&quot;highlighter-rouge&quot;&gt;payload&lt;/code&gt;로 설정했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;가 튀어나온다
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;user_id&lt;/code&gt;를 사용한 이유는 토큰이 유출되어 &lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt; 되더라도, 사용자에게 치명적인 정보가 유출되는 것을 막을 수 있기 때문이다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt;된 유저 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;가 내 데이터베이스에 존재한다면, &lt;code class=&quot;highlighter-rouge&quot;&gt;request.user&lt;/code&gt;를 생성해서, 해당 유저의 정보를 담아준다&lt;/li&gt;
  &lt;li&gt;이후 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;를 잘 포장해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;시켜주면, &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt;를 먼저 실행시키고, 이후 로직이 적용되게 작성하게 된다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;중간-흐름-파악&quot;&gt;중간 흐름 파악&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;지금 흐름을 파악해보자
    &lt;ul&gt;
      &lt;li&gt;새로운 앱 생성 ➡️ &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;에 앱 등록 ➡️ 앱 안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;models.py&lt;/code&gt; 작성 ➡️ &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;에서 사용할 데코레이터 작성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;작성하는 순서가 중구난방이 아닌 내가 개발하는 흐름에 맞게 지금 단계에서 뭘하고 있는지 알면서 하는 것이 중요하다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;viewspy-작성&quot;&gt;views.py 작성&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/3421b20b-076c-496d-85b4-ca4af074f42e/%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3%E1%84%87%E1%85%B2import%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여느 &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;와 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 내용이다(원래는 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 기준으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;align&lt;/code&gt;하는게 컨벤션이지만, 시간이 부족해서 기능만 구현하고, 리팩토링을 진행하지 못했다)&lt;/li&gt;
  &lt;li&gt;추가된 점이라면, 사용하려고 작성해둔 &lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt;(&lt;code class=&quot;highlighter-rouge&quot;&gt;appropriation&lt;/code&gt;)를 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt; 해줬다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/508dc1a9-79cf-451e-b993-006db6662b6f/%E1%84%91%E1%85%A9%E1%84%89%E1%85%B3%E1%84%90%E1%85%B3views%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt; 메소드와 &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; 메소드에 대한 로직이다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;decorator&lt;/code&gt; 작성단계부터 자세히 보신 분들은 알겠지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;error&lt;/code&gt;에 대해서 세분화하지 않고, 통으로 처리하고 있다. 이 또한, 정해진 시간안에서 기능만 구현하려고 처리한 내용이니, 본인의 상황에 맞게 생각대로 에러를 처리해 주면 된다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;통신&quot;&gt;통신&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/4aed5f28-ed34-46d1-bd09-76082493e709/ip%20%E1%84%80%E1%85%A1%E1%84%8C%E1%85%A7%E1%84%8B%E1%85%A9%E1%84%80%E1%85%B5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;우선 내 &lt;code class=&quot;highlighter-rouge&quot;&gt;ip&lt;/code&gt;를 확인하고, 프론트엔드에 알려줘야 한다&lt;/li&gt;
  &lt;li&gt;그리고 내 로직에 접근할 수 있도록 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;의 경로 또한 알려줘야 한다&lt;/li&gt;
  &lt;li&gt;프론트엔드에서 경로에 맞게 &lt;code class=&quot;highlighter-rouge&quot;&gt;fetch&lt;/code&gt;하고, 올바른 메소드와 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt; 내용을 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;한다
    &lt;ul&gt;
      &lt;li&gt;당연한 얘기지만, &lt;code class=&quot;highlighter-rouge&quot;&gt;body&lt;/code&gt;에 담을 때, &lt;code class=&quot;highlighter-rouge&quot;&gt;key&lt;/code&gt; 이름에 대해서 협의를 통해서 맞춰야 한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;정확하게 통신이 됐다면, 내가 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 했던, 메세지와 상태코드가 뜰 것이고, 에러 또한 내가 컨트롤 하고 있었다면 정해진 메세지와 상태코드가 뜰 것이다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/a245c5df-211a-4bf8-ae67-2c644757a44f/%E1%84%89%E1%85%B3%E1%84%8F%E1%85%B3%E1%84%85%E1%85%B5%E1%86%AB%E1%84%89%E1%85%A3%E1%86%BA%202021-04-07%20%E1%84%8B%E1%85%A9%E1%84%92%E1%85%AE%204.10.50.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;로그인 시에 성공했다는 메세지와 함께, 토큰을 보내 준 모습이다&lt;/li&gt;
  &lt;li&gt;여기서 헷갈려하는게 &lt;code class=&quot;highlighter-rouge&quot;&gt;westagram 1&lt;/code&gt;에서 진행했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;hashed password&lt;/code&gt;인 부분이라고 생각한다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;hashed password&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;user&lt;/code&gt;의 정보 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;를 보안을 목적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;hash&lt;/code&gt;화 해서 저장한 것이고, &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;은 유저가 로그인 상태라는 것을 지속적으로 확인하기 위해(인가) 프론트엔드와 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 통해 정보를 주고 받는 용도이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;westagram-후기&quot;&gt;westagram 후기&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;의외로 전에 연습했던 단계들이 있어서 그런지, 데이터베이스를 구성하는 단계에서는 흐름대로, 생각대로 흐름을 가지고 진행할 수 있었다&lt;/li&gt;
  &lt;li&gt;다만, 내가 구성한 데이터베이스를 프론트엔드와 통신하면서 화면에 띄우는 것은 다른 문제였다&lt;/li&gt;
  &lt;li&gt;대부분이 사소한 오타나, 변수명을 확인하지 못한 문제였지만, 위에서 언급한 &lt;code class=&quot;highlighter-rouge&quot;&gt;corsheader&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;allowed headers&lt;/code&gt;와 관련된 것은 알지 못한다는 이유 하나로 파트너를 고생시키며, 3시간 가량이나 시간이 소요됐다.&lt;/li&gt;
  &lt;li&gt;어떤 기능을 한다는 것을 안다고 그 기능을 이해한 것은 아니라는 것을 알게되었다. 때문에 다음 공부는 &lt;code class=&quot;highlighter-rouge&quot;&gt;corsheader&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;json&lt;/code&gt;에 대한 공부가 될 것 같다&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">westagram 3 review</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">008. Django - westagram 2 review</title>
      <link href="http://localhost:4000/008-django" rel="alternate" type="text/html" title="008. Django - westagram 2 review" />
      <published>2021-04-08T00:00:00+09:00</published>
      <updated>2021-04-08T00:00:00+09:00</updated>
      <id>http://localhost:4000/008-django</id>
      <content type="html" xml:base="http://localhost:4000/008-django">&lt;h2 id=&quot;westagram&quot;&gt;westagram&lt;/h2&gt;

&lt;h3 id=&quot;loginview-review&quot;&gt;LoginView review&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/90a7cbf0-7c76-409f-8773-8cbcb5915ce3/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%8B%E1%85%B5%E1%86%AB%E1%84%87%E1%85%B2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;유저 입장에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;input&lt;/code&gt; 할 수 있는 공간은 하나이므로 &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;이나 &lt;code class=&quot;highlighter-rouge&quot;&gt;phone_number&lt;/code&gt; 중 하나를 입력하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;request body&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;account&lt;/code&gt;로 담아서 받게끔 빌드함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt; 부분에서 입력된 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt;하고, 데이터베이스에서 가져온 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt; 했을 때, 일치한다면 성공 메시지와 함께 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 보내줌(인증)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;bycrypt&quot;&gt;bycrypt&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;앞서 리뷰한 &lt;code class=&quot;highlighter-rouge&quot;&gt;westagram&lt;/code&gt; 이후에 &lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;hash&lt;/code&gt;화 해서 저장해서 보안을 높이는 작업을 진행했다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt; 초기 세팅 과정은 생략하도록 한다&lt;/li&gt;
  &lt;li&gt;회원가입 때 입력받은 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt;를 이용해서, &lt;code class=&quot;highlighter-rouge&quot;&gt;hash&lt;/code&gt;화 시킨다, 이 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;type&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;byte&lt;/code&gt;가 된다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;byte&lt;/code&gt;의 형태는 &lt;code class=&quot;highlighter-rouge&quot;&gt;b'해쉬값&lt;/code&gt; 형태를 이루게 되는데 이게 데이터베이스에 들어가면, &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;byte&lt;/code&gt;의 뜻으로 인식하지 않고, 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt; 값으로 인식해서 저장한다
    &lt;ul&gt;
      &lt;li&gt;그렇게 되면 당연히 로그인 과정에서 불러온 값을 &lt;code class=&quot;highlighter-rouge&quot;&gt;encode&lt;/code&gt; 했을 때, 입력값과 다른 값으로 출력될 것이고, 로그인이 되지 않는 문제가 발생한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;위 문제점 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;bcrypt&lt;/code&gt;로 해쉬화한 비밀번호를 저장할 때는 다시 &lt;code class=&quot;highlighter-rouge&quot;&gt;decode&lt;/code&gt;해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;를 제거한 후에 저장해 준다&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;jwt&quot;&gt;jwt&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;http&lt;/code&gt;의 특징 중에 하나는 담고 있던 내용에 대해서 기억하지 않는다는 것이다 때문에 로그인 이후에 로그인 했다는 기억을 가지고 있지 않게 된다&lt;/li&gt;
  &lt;li&gt;로그인이 되어 있다는 신호를 주기 위해 사용하는 것이 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;이다&lt;/li&gt;
  &lt;li&gt;서버에서 최초 로그인 시에 인증을 뜻하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 발행해 주고, &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt; 받은 프론트에서 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;으로 다른 작업들의 권한 승인요청을 한다(&lt;code class=&quot;highlighter-rouge&quot;&gt;token&lt;/code&gt;의 저장 방식에 대해서는 추후 프로젝트에서 리뷰할 예정이다)&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">westagram</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">007. Django - westagram review 1</title>
      <link href="http://localhost:4000/007-django" rel="alternate" type="text/html" title="007. Django - westagram review 1" />
      <published>2021-04-06T00:00:00+09:00</published>
      <updated>2021-04-06T00:00:00+09:00</updated>
      <id>http://localhost:4000/007-django</id>
      <content type="html" xml:base="http://localhost:4000/007-django">&lt;h2 id=&quot;westagram&quot;&gt;Westagram&lt;/h2&gt;

&lt;h3 id=&quot;초기-세팅&quot;&gt;초기 세팅&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;conda&lt;/code&gt; 새로운 가상환경 &lt;code class=&quot;highlighter-rouge&quot;&gt;westagram&lt;/code&gt; 생성&lt;/li&gt;
  &lt;li&gt;pip install &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysqlclient&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;ipython&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;django-cors-headers&lt;/code&gt; 설치&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;westagram&lt;/code&gt; 클론해오고, 가이드 따라서 프로젝트 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;my_settings&lt;/code&gt; 생성해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt;에 올라가면 안되는 설정들 옮겨놓고, &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;에서 주석처리할 내용들 주석처리하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;installed.apps&lt;/code&gt;에 pip install 했던 &lt;code class=&quot;highlighter-rouge&quot;&gt;corsheaders&lt;/code&gt;와 middleware 설정&lt;/li&gt;
  &lt;li&gt;프로젝트에 &lt;code class=&quot;highlighter-rouge&quot;&gt;users&lt;/code&gt; 앱 생성, &lt;code class=&quot;highlighter-rouge&quot;&gt;settings.py&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;users&lt;/code&gt; 앱 추가&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;modelspy-작성&quot;&gt;models.py 작성&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c63fbdb2-1d11-463a-b410-d6d56cfa058e/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%86%E1%85%A9%E1%84%83%E1%85%A6%E1%86%AF.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;modelspy-review&quot;&gt;models.py review&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;EmailField&lt;/code&gt;가 특별한 기능을 가지지 않아 &lt;code class=&quot;highlighter-rouge&quot;&gt;CharField&lt;/code&gt; 써도 똑같을 것 같음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;phone&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;PhoneField&lt;/code&gt;를 사용하기 위해서 pip install 까지 했는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;PhoneField&lt;/code&gt;가 하는 역할이 없어서 사용할 필요성이 없어 보임&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;validationpy-작성&quot;&gt;validation.py 작성&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/284f6676-50d3-443a-898a-67b6be63959d/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%87%E1%85%A6%E1%86%AF%E1%84%85%E1%85%B5%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%89%E1%85%A7%E1%86%AB.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;password&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;email&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;phone&lt;/code&gt;의 유효성을 확인하기 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;validator&lt;/code&gt; 작성&lt;/li&gt;
  &lt;li&gt;정규표현식으로 작성하면 더 간단하게 처리할 수 있음&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;viewspy-작성회원가입&quot;&gt;views.py 작성(회원가입)&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/f3ada5a5-d9aa-46a1-bb11-29958055b09b/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%92%E1%85%AC%E1%84%8B%E1%85%AF%E1%86%AB%E1%84%80%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%B8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;회원가입-review&quot;&gt;회원가입 review&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;validation.py&lt;/code&gt; 적용하기 전 모습&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;파이썬 컨벤션에 맞게 &lt;code class=&quot;highlighter-rouge&quot;&gt;=&lt;/code&gt;에 맞춰 정리&lt;/li&gt;
  &lt;li&gt;성공했을 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 값이 해당 코드 바로 뒤에 오게 해서 가독성 높이기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;문 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt; 하는데 굳이 &lt;code class=&quot;highlighter-rouge&quot;&gt;elif&lt;/code&gt; 쓰는 이유&lt;/li&gt;
  &lt;li&gt;오류 메시지는 프론트엔드 개발자가 보는 내용이기 때문에 굳이 한글로 쓸 필요 없음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;if&lt;/code&gt;문 사이 빈칸 추가로 가독성 높이기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;number&lt;/code&gt; 변수명 더 명확하게 수정하기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;명 회원가입의 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;SignUpView&lt;/code&gt;를 사용하는게 일반적&lt;/li&gt;
&lt;/ol&gt;

&lt;h4 id=&quot;변경된-viewspy회원가입&quot;&gt;변경된 views.py(회원가입)&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/9984643f-fa32-4bf5-9140-14f401be48cb/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%92%E1%85%AC%E1%84%8B%E1%85%AF%E1%86%AB%E1%84%80%E1%85%A1%E1%84%8B%E1%85%B5%E1%86%B8%20view.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;추가 변경사항 - &lt;code class=&quot;highlighter-rouge&quot;&gt;validation&lt;/code&gt;이 먼저 완료되고, 데이터베이스에 접근하도록 수정함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;프로젝트-urlspy와-앱-urlspy-작성&quot;&gt;프로젝트 urls.py와 앱 urls.py 작성&lt;/h3&gt;

&lt;h4 id=&quot;프로젝트-urlspy&quot;&gt;프로젝트 urls.py&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/edb75e1f-0fa5-4b26-bdd2-74951082725c/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%91%E1%85%B3%E1%84%85%E1%85%A9%E1%84%8C%E1%85%A6%E1%86%A8%E1%84%90%E1%85%B3%20urls.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h4 id=&quot;앱-urlspy&quot;&gt;앱 urls.py&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/53dd42da-34e9-46cf-876f-ec03359e7b94/%E1%84%8B%E1%85%B1%E1%84%89%E1%85%B3%E1%84%90%E1%85%A1%E1%84%80%E1%85%B3%E1%84%85%E1%85%A2%E1%86%B7%20%E1%84%8B%E1%85%A2%E1%86%B8%20urls.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">Westagram</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">006. Django - C.R.U.D 2 review</title>
      <link href="http://localhost:4000/006-django" rel="alternate" type="text/html" title="006. Django - C.R.U.D 2 review" />
      <published>2021-04-03T00:00:00+09:00</published>
      <updated>2021-04-03T00:00:00+09:00</updated>
      <id>http://localhost:4000/006-django</id>
      <content type="html" xml:base="http://localhost:4000/006-django">&lt;h2 id=&quot;crud-2-review&quot;&gt;C.R.U.D 2 review&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;C.R.U.D 1 때 &lt;code class=&quot;highlighter-rouge&quot;&gt;models.py&lt;/code&gt;를 작성하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;migrate&lt;/code&gt;해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;django shell&lt;/code&gt;을 이용해 데이터를 입력하고, 삭제하고, 업데이트 하는 등 조작을 해 봤다&lt;/li&gt;
  &lt;li&gt;C.R.U.D 2 에서는 프로젝트 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;와 앱 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;를 작성하고, &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;를 작성해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;httpie&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; 온 내용을 처리하는 과정을 학습한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;flow&quot;&gt;flow&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;review&lt;/code&gt;에 앞서 흐름에 대해 이해하고 넘어가려한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c6d4f984-c848-4120-ac5d-e7e64d9b2dc5/flow.jpg&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;위 그림에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;client&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;를 보내면 프로젝트 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에서 분류하여 앱의 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;로 보내준다, 앱 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;는 여기서 한번 더 분류해서 일치하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;class&lt;/code&gt;로 보내주게 되고, &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;는 해당 로직을 완수한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;modelspy&quot;&gt;models.py&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c91a402b-faf9-4815-af42-973d4573c5b1/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%86%E1%85%A9%E1%84%83%E1%85%A6%E1%86%AF%E1%84%91%E1%85%A1%E1%84%8B%E1%85%B5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;환경설정과 기초 세팅에 관해서는 생략하고 모델부터 살펴보겠다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Owner&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Dog&lt;/code&gt;클래스가 있고, 1대다 관계를 형성하고 있는 모델이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;viewspy&quot;&gt;views.py&lt;/h2&gt;

&lt;h3 id=&quot;post&quot;&gt;post&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;먼저 &lt;code class=&quot;highlighter-rouge&quot;&gt;POST&lt;/code&gt; 메소드를 처리할 부분을 살펴보겠다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/53fd4d59-bb53-4d1c-8301-7b73ca5b6f7f/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%87%E1%85%B2%E1%84%8B%E1%85%AF%E1%84%82%E1%85%A5.png&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/b6458e38-4445-44c8-9202-9eeac2f8e267/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%87%E1%85%B2%E1%84%83%E1%85%A9%E1%84%80%E1%85%B3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;두 클래스의 메소드 이름이 모두 &lt;code class=&quot;highlighter-rouge&quot;&gt;post&lt;/code&gt;인 것에 집중해야 한다&lt;/li&gt;
  &lt;li&gt;프로젝트 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에서 앱 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;로 온 후에 각 뷰에 &lt;code class=&quot;highlighter-rouge&quot;&gt;as_view()&lt;/code&gt;를 적용해 주었다, &lt;code class=&quot;highlighter-rouge&quot;&gt;as_view()&lt;/code&gt; 부분이 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;에 담긴 메소드를 따라서 &lt;code class=&quot;highlighter-rouge&quot;&gt;views.py&lt;/code&gt;안의 클래스 안에 있는 여러 메소드 중 일치하는 메소드의 로직을 따르도록 하는 부분이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;get&quot;&gt;get&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;다음은 &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt; 메소드를 처리할 부분이다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/35d12b23-ba75-47fd-8e9d-abef174f04a2/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%8B%E1%85%AF%E1%84%82%E1%85%A5%E1%84%80%E1%85%A6%E1%86%BA.png&quot; alt=&quot;&quot; /&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/bf8bc6cb-dacc-4052-a806-7cdabc06bb67/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%83%E1%85%A9%E1%84%80%E1%85%B3%E1%84%80%E1%85%A6%E1%86%BA.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Owner&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;get&lt;/code&gt;을 처리할 때, 한번에 정보를 출력하기 위해서 코드를 설계하다보니 많이 지저분한 모습이다&lt;/li&gt;
  &lt;li&gt;이후 C.R.U.D 2 세션에서 더 깔끔한 모습을 봤으니 다음 &lt;code class=&quot;highlighter-rouge&quot;&gt;westagram&lt;/code&gt; 과제에서 사용하게 된다면 더 깔끔하게 구현하도록 노력해야겠다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;프로젝트-urlspy&quot;&gt;프로젝트 urls.py&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/1f4c0824-3f8d-4683-bbf4-2f3132b596cc/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%8B%E1%85%B2%E1%84%8B%E1%85%A1%E1%86%AF%E1%84%8B%E1%85%A6%E1%86%AF%E1%84%91%E1%85%B3%E1%84%85%E1%85%A9%E1%84%8C%E1%85%A6%E1%86%A8%E1%84%90%E1%85%B3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ownerdogs&lt;/code&gt; 부분이 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;로 들어오면 &lt;code class=&quot;highlighter-rouge&quot;&gt;include&lt;/code&gt;안의 앱의 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;로 보내게 처리한 내용이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;앱-urlspy&quot;&gt;앱 urls.py&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/736a8ab2-a53d-4386-9acd-002e88a71bc7/%E1%84%87%E1%85%B3%E1%86%AF%E1%84%85%E1%85%A9%E1%84%80%E1%85%B3%E1%84%8B%E1%85%A2%E1%86%B8%E1%84%8B%E1%85%B2%E1%84%8B%E1%85%A1%E1%86%AF%E1%84%8B%E1%85%A6%E1%86%AF.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에서 분류되어 들어와서 &lt;code class=&quot;highlighter-rouge&quot;&gt;/owner&lt;/code&gt; 나 &lt;code class=&quot;highlighter-rouge&quot;&gt;/dog&lt;/code&gt;로 분류되어 원하는 클래스로 분류하는 부분이다&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">C.R.U.D 2 review</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">005. Django - model method, 정참조, 역참조</title>
      <link href="http://localhost:4000/005-django" rel="alternate" type="text/html" title="005. Django - model method, 정참조, 역참조" />
      <published>2021-03-31T00:00:00+09:00</published>
      <updated>2021-03-31T00:00:00+09:00</updated>
      <id>http://localhost:4000/005-django</id>
      <content type="html" xml:base="http://localhost:4000/005-django">&lt;h2 id=&quot;queryset&quot;&gt;Queryset&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Queryset&lt;/code&gt;은 전달받은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt;의 객체 목록을 의미한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Database&lt;/code&gt;로부터 데이터를 읽고, 필터를 걸거나 정렬 등을 할 수 있다&lt;/li&gt;
  &lt;li&gt;리스트와 같은 구조를 지니고 있지만, 파이썬 기본 자료구조가 아니기 때문에 읽고, 쓰기 위해서는 자료형 변환을 해줘야 한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Queryset&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;Database&lt;/code&gt;의 여러 레코드(row)를 나타낸다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;objects&quot;&gt;objects&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/cd58ffbb-1a27-4d1b-ab23-68438e05ffe6/%E1%84%8C%E1%85%A5%E1%86%BC%E1%84%8E%E1%85%A1%E1%86%B7%E1%84%8C%E1%85%A91.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;여기서 보이는 &lt;code class=&quot;highlighter-rouge&quot;&gt;objects&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;ModelManager&lt;/code&gt;로 일종의 매니저 역할을 한다고 생각하면 된다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Database&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt; 사이에서 의사소통을 할 수 있도록 돕는 역할을 한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Product.objects&lt;/code&gt;를 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;objects&lt;/code&gt;라는 이름의 매니저가 &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;DB&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;Queryset&lt;/code&gt; 형태로 변환시킨다는 뜻이다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;model-method&quot;&gt;Model method&lt;/h2&gt;

&lt;h3 id=&quot;methods-that-dont-return-querysets&quot;&gt;Methods That Don’t Return QuerySets&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;create()
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Table&lt;/code&gt;에 데이터를 추가(&lt;code class=&quot;highlighter-rouge&quot;&gt;INSERT&lt;/code&gt;) 해주는 &lt;code class=&quot;highlighter-rouge&quot;&gt;method&lt;/code&gt;로, 생성된 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;를 반환해준다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/8ca59b94-aaa7-4239-8618-f9be93b1a721/create.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;get()
    &lt;ul&gt;
      &lt;li&gt;지정된 조회 매개 변수와 일치하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;를 반환합니다&lt;/li&gt;
      &lt;li&gt;매개 변수는 필드 조회에 설명된 형식이어야합니다&lt;/li&gt;
      &lt;li&gt;하나의 값만 가능!! 둘 이상이라면 오류 발생
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/61001b22-2042-4e89-940b-380ee5d21def/get.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;update()
    &lt;ul&gt;
      &lt;li&gt;지정된 필드에 대해 업데이트 쿼리를 수행하고 수행한 행 수를 반환&lt;/li&gt;
      &lt;li&gt;일부 행에 이미 업데이트 하려던 값이있는 경우 업데이트 된 행 수와 일치하지 않을 수 있다&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;update()&lt;/code&gt;를 사용하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;queryset&lt;/code&gt; 형태에만 적용할 수 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;delete()
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;QuerySet&lt;/code&gt;의 모든 행에 대해 SQL 삭제 쿼리를 수행하고 삭제 된 개체 수와 개체 유형별 삭제 횟수가 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;dictionary&lt;/code&gt;를 반환한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;save()
    &lt;ul&gt;
      &lt;li&gt;저장&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;exists()
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter()&lt;/code&gt;와 함께 사용해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;filter&lt;/code&gt; 조건에 맞는 데이터가 있는지 조회, 존재하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;True&lt;/code&gt; 존재하지 않으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;False&lt;/code&gt;를 반환한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;get_or_create()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;bulk_create()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;count()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;first()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;last()&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;aggregate()&lt;/code&gt; 등등(사용해보고 리뷰 올리겠습니다!!)&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;methods-that-return-querysets&quot;&gt;Methods That Return QuerySets&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;all()
    &lt;ul&gt;
      &lt;li&gt;한 테이블의 모든 레코드를 가져오려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;all() method&lt;/code&gt;를 사용한다&lt;/li&gt;
      &lt;li&gt;그 결과로 &lt;code class=&quot;highlighter-rouge&quot;&gt;QuerySet&lt;/code&gt; 을 반환한다&lt;/li&gt;
      &lt;li&gt;이때, &lt;code class=&quot;highlighter-rouge&quot;&gt;QuerySet&lt;/code&gt; 안에는 각각 &lt;code class=&quot;highlighter-rouge&quot;&gt;인스턴스&lt;/code&gt;가 포함되어 있다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;exclude()
    &lt;ul&gt;
      &lt;li&gt;조건에 맞지 않는 값을 조회&lt;/li&gt;
      &lt;li&gt;IS NOT, NOT IN&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;filter()
    &lt;ul&gt;
      &lt;li&gt;한 테이블의 특정 레코드를 가져올 때 사용&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter() method&lt;/code&gt;는 가장 자주 사용하는 기능&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;filter(**kwargs)&lt;/code&gt; : 키워드 인자로 주어진 조건에 일치하는 레코드들의 &lt;code class=&quot;highlighter-rouge&quot;&gt;QuerySet&lt;/code&gt;을 반환한다&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;values()
    &lt;ul&gt;
      &lt;li&gt;쿼리셋의 값을 딕셔너리 형태로 반환한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ad3ad797-e731-4e71-aac2-129cdbc8afb6/vlaues.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;values_list()
    &lt;ul&gt;
      &lt;li&gt;쿼리셋의 값을 튜플 형태로 반환한다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/5987791f-374f-4581-9ffb-a11ea3529c2f/values_list.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;manytomany-field&quot;&gt;ManytoMany field&lt;/h2&gt;

&lt;h3 id=&quot;foreignkey-field로-이어주는-것과-차이점&quot;&gt;Foreignkey Field로 이어주는 것과 차이점&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/52654c86-a6e0-40ba-86ba-c96aaa89d1ba/%E1%84%83%E1%85%A1%E1%84%83%E1%85%A2%E1%84%83%E1%85%A1%E1%84%80%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A8.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;중간 테이블 &lt;code class=&quot;highlighter-rouge&quot;&gt;AllergyDrink&lt;/code&gt;를 만들어주고 &lt;code class=&quot;highlighter-rouge&quot;&gt;Allergy&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;FK&lt;/code&gt;로 연결해줘도 사실 문제는 없다&lt;/li&gt;
  &lt;li&gt;그런데 굳이 &lt;code class=&quot;highlighter-rouge&quot;&gt;ManytoMany field&lt;/code&gt;로 설정해주는 이유는 뭘까?&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;데이터를 삽입할 때 차이 (create)&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Allergy&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;ManytoMany&lt;/code&gt;로 연결해준 경우에는 굳이 ` AllergyDrink&lt;code class=&quot;highlighter-rouge&quot;&gt;를 거치지 않고 &lt;/code&gt;Product&lt;code class=&quot;highlighter-rouge&quot;&gt;를 통해 바로 &lt;/code&gt;Allery`에 접근 할 수 있다&lt;/li&gt;
  &lt;li&gt;만약 &lt;code class=&quot;highlighter-rouge&quot;&gt;AllergyDrink&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;FK&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;Allergy&lt;/code&gt;를 연결해주면 데이터 추가할때 항상 중간테이블을 거쳐야한다&lt;/li&gt;
&lt;/ul&gt;

&lt;ol&gt;
  &lt;li&gt;데이터를 불러올 때 차이 (get)&lt;/li&gt;
&lt;/ol&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Many to Many&lt;/code&gt;로 연결한 경우 &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Allergy&lt;/code&gt; 정보(&lt;strong&gt;정참조&lt;/strong&gt;)를 바로 가져올 수도 있고, &lt;code class=&quot;highlighter-rouge&quot;&gt;Allergy&lt;/code&gt;에서도 &lt;code class=&quot;highlighter-rouge&quot;&gt;Product&lt;/code&gt;정보(&lt;strong&gt;역참조&lt;/strong&gt;, 장고에서 붙여준 매니저 &lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;을 통해)를 바로 가져올 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;정참조&quot;&gt;정참조&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;products.models&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'콜드 브루'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'콜드 브루'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# mtm 관계, 정참조라서 바로 접근해서 가져오는 모습&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Allergy&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Allergy&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'우유'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'우유'&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'대두'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'우유'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'난류'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d8&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'대두'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'우유'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'난류'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;대두&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;우유&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;난류&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;밀&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;역참조&quot;&gt;역참조&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;related name&lt;/code&gt;을 설정해주지 않았으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;이 붙으면 역참조 데이터임을 알 수 있다&lt;/li&gt;
  &lt;li&gt;하지만 함부로 설정했을 경우, 역참조를 도와주는 매니저인지 모를 경우가 있을 수도 있으니, 초창기에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;_set&lt;/code&gt;인 상황에서 익숙해지는 걸 추천&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_set&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;django&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;models&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;related_descriptors&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;create_reverse_many_to_one_manager&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&amp;lt;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;locals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RelatedManager&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;at&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x7fa3cfe7a5e0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Product&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;object&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Category&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;all&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;나이트로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;바닐라&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크림&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;나이트로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;쇼콜라&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;클라우드&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;Out&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;QuerySet&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'나이트로 쇼콜라 클라우드'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'나이트로 바닐라 크림'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'딸기 요거트 블렌디드'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'트리플 미니 스콘'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'보니밤 몽블랑 데니쉬'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀당 에그 타르트'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀당 초코 타르트'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;22&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Allergy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;objects&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;product_set&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;23&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'나이트로 쇼콜라 클라우드'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'나이트로 바닐라 크림'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'딸기 요거트 블렌디드'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'트리플 미니 스콘'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'보니밤 몽블랑 데니쉬'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀당 에그 타르트'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'밀당 초코 타르트'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'category_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;In&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;     &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;나이트로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;쇼콜라&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;클라우드&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;나이트로&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;바닐라&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;크림&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;딸기&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;요거트&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;블렌디드&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;트리플&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;미니&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;스콘&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;보니밤&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;몽블랑&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;데니쉬&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;밀당&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;에그&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타르트&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;밀당&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;초코&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;타르트&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">Queryset</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">004. Django - C.R.U.D 1 review</title>
      <link href="http://localhost:4000/004-django" rel="alternate" type="text/html" title="004. Django - C.R.U.D 1 review" />
      <published>2021-03-29T00:00:00+09:00</published>
      <updated>2021-03-29T00:00:00+09:00</updated>
      <id>http://localhost:4000/004-django</id>
      <content type="html" xml:base="http://localhost:4000/004-django">&lt;h2 id=&quot;django-crud-1-review&quot;&gt;Django C.R.U.D 1 review&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Assignment
    &lt;ul&gt;
      &lt;li&gt;저번에 팀으로 스타벅스 모델링을 진행한 것을 바탕으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt; 모델을 완성하는 작업
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/fa1e9a78-5e80-4f94-a3c5-32a947bb5bb1/modeling.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;모델링을 보면 &lt;code class=&quot;highlighter-rouge&quot;&gt;menu&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;category&lt;/code&gt;가 서로 1 대 다 관계이고, &lt;code class=&quot;highlighter-rouge&quot;&gt;category&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;drinks&lt;/code&gt; 또한 1 대 다 관계인 것을 확인했다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;field type&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;ForeignKey&lt;/code&gt;를 다의 위치에 있는 테이블에 명시하고, 1의 관계인 테이블을 연결해서 구현할 수 있었다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/edad700f-5329-4b6d-b705-9675622e7661/1%E1%84%83%E1%85%A2%E1%84%83%E1%85%A1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;결과물 중 &lt;code class=&quot;highlighter-rouge&quot;&gt;drinks&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;images&lt;/code&gt; 또한 같은 방식으로 구현함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;drinks&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;allergy&lt;/code&gt; 테이블의 관계는 다 대 다 관계인 것을 확인&lt;/li&gt;
  &lt;li&gt;다 대 다 관계를 구현하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt; docs를 찾았고, &lt;code class=&quot;highlighter-rouge&quot;&gt;ManytoMany&lt;/code&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;field&lt;/code&gt;를 확인함
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/d189b858-256a-4391-91db-e3e45dd3eaa6/%E1%84%83%E1%85%A1%E1%84%83%E1%85%A2%E1%84%83%E1%85%A1%E1%84%80%E1%85%AA%E1%86%AB%E1%84%80%E1%85%A8.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;ManytoMany&lt;/code&gt; 필드를 관계를 가진 테이블끼리 설정하면, 중간 테이블이 자동으로 생성된다&lt;/li&gt;
  &lt;li&gt;나는 내가 원하는 테이블을 중간 테이블로 지정하고 싶어서 좀 더 찾아보니 &lt;code class=&quot;highlighter-rouge&quot;&gt;through&lt;/code&gt;를 사용해, 내가 원하는 테이블로 지정할 수 있는 것을 찾아냄&lt;/li&gt;
  &lt;li&gt;위 사진처럼 &lt;code class=&quot;highlighter-rouge&quot;&gt;ManytoMany&lt;/code&gt;로 관계를 설정하고, 중간 테이블에 연결된 외래키를 설정해서 구현&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py shell&lt;/code&gt;을 통해서 테이블에 값을 입력해서 과제 제출
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/805331fd-50fe-43f3-ba2a-cb75ffa92492/menu.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/fff759ee-178c-4236-8ba2-f240b7430e36/category.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/bbe69a3e-9d95-4c23-b340-97a07afed3ea/product.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/92ada7d2-cde2-46ad-a762-d2a02e50409f/allergy.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c1d78a4d-cea7-41e1-9942-68863b14f480/allergydrink.png&quot; alt=&quot;&quot; /&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/3e4097a0-a48b-44d6-a78e-87d7c97db54a/image.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">Django C.R.U.D 1 review</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">003. Django - view</title>
      <link href="http://localhost:4000/003-django" rel="alternate" type="text/html" title="003. Django - view" />
      <published>2021-03-26T00:00:00+09:00</published>
      <updated>2021-03-26T00:00:00+09:00</updated>
      <id>http://localhost:4000/003-django</id>
      <content type="html" xml:base="http://localhost:4000/003-django">&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt; 웹의 로직을 담당&lt;/li&gt;
  &lt;li&gt;웹에서 일어나는 데이터 저장, 파일 다운로드 등을 위해 코드 작성
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/0294252e-7f42-463b-a180-44ea5c29904e/view.py%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 명심해야 할 점&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt; 인자를 받고&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HttpResponse&lt;/code&gt;로 &lt;code class=&quot;highlighter-rouge&quot;&gt;return&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt; 하기 전에 데이터 관련된 코드들이 중간에 들어가는 개념
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/74ae4f6b-50ce-482c-b62a-ad2c3e4b8317/view.py%20index%20%E1%84%89%E1%85%AE%E1%84%8C%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;models.py&lt;/code&gt;에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;을 불러와서 출력&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt; 데이터에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;출판일자&lt;/code&gt;를 정렬하여 &lt;code class=&quot;highlighter-rouge&quot;&gt;5개&lt;/code&gt;까지 가져오고 &lt;code class=&quot;highlighter-rouge&quot;&gt;5개&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;,&lt;/code&gt;로 연결하여 리스폰스 하겠다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/3b9e67b0-a737-45ed-ab86-e82821e5aa55/polls:urls.py%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;polls/urls.py&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 설정&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에서는 해당 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt; 이 끝나는 지점의 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 작업을 수행하게 된다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;에서는 &lt;code class=&quot;highlighter-rouge&quot;&gt;httpresponse&lt;/code&gt;를 리턴하거나 &lt;code class=&quot;highlighter-rouge&quot;&gt;http404&lt;/code&gt; 같은 예외를 리턴함&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;template-필요성&quot;&gt;Template 필요성&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;지금까지 클라이언트에게 보여주는 페이지가 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내에 있었음&lt;/li&gt;
  &lt;li&gt;데이터를 추출해서 바로 &lt;code class=&quot;highlighter-rouge&quot;&gt;클라이언트&lt;/code&gt;에게 보여줌&lt;/li&gt;
  &lt;li&gt;디자인 수정 시 너무 어려움, 디자인 수정을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부를 수정해야 하기 때문에&lt;/li&gt;
  &lt;li&gt;그래서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;와 디자인 담당인 &lt;code class=&quot;highlighter-rouge&quot;&gt;template&lt;/code&gt;을 분리해야 함&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;수정이 편하고, 더 적게 수정하는 방안으로 빌드하는 것이 중요하다!!!!&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">view는 django 웹의 로직을 담당 웹에서 일어나는 데이터 저장, 파일 다운로드 등을 위해 코드 작성 view 명심해야 할 점 view 에서는 request 인자를 받고 HttpResponse로 return response 하기 전에 데이터 관련된 코드들이 중간에 들어가는 개념 models.py에서 Question을 불러와서 출력 question 데이터에서 출판일자를 정렬하여 5개까지 가져오고 5개를 ,로 연결하여 리스폰스 하겠다 polls/urls.py에 path 설정 urls.py에서는 해당 url 이 끝나는 지점의 path 작업을 수행하게 된다 view에서는 httpresponse를 리턴하거나 http404 같은 예외를 리턴함</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">002. Django - tutorial 2 review</title>
      <link href="http://localhost:4000/002-django-copy" rel="alternate" type="text/html" title="002. Django - tutorial 2 review" />
      <published>2021-03-25T00:00:00+09:00</published>
      <updated>2021-03-25T00:00:00+09:00</updated>
      <id>http://localhost:4000/002-django%20copy</id>
      <content type="html" xml:base="http://localhost:4000/002-django-copy">&lt;h2 id=&quot;tutorial-2-review&quot;&gt;tutorial 2 review&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;는 기본적으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;SQLite&lt;/code&gt;를 제공하고 있다 하지만 나는 &lt;code class=&quot;highlighter-rouge&quot;&gt;MySQL&lt;/code&gt;을 사용하기 위해 설정을 조금 변경하는 과정을 소개한다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;mysql에서-database-생성하기&quot;&gt;MySQL에서 DATABASE 생성하기&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql.server start&lt;/code&gt;로 서버를 열어주기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysql -u root -p&lt;/code&gt;를 통해 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysql&lt;/code&gt; 접속&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/98e314f9-5fc4-4330-bba2-f6d1a20200de/mysql%20data%20create.png&quot; alt=&quot;&quot; /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;DATABASE&lt;/code&gt; 생성 &lt;code class=&quot;highlighter-rouge&quot;&gt;testdata&lt;/code&gt;는 데이터베이스 이름임&lt;/li&gt;
  &lt;li&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/6bc65df3-ef7e-48bc-aa14-89c9a5f6cbb7/mysql%20show%20databases;.png&quot; alt=&quot;&quot; /&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;SHOW DATABASES&lt;/code&gt;를 통해서 생성됐는지 확인&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;mysitesettingspy에서-mysql로-변경해주기&quot;&gt;mysite/settings.py에서 MySQL로 변경해주기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/0d8314e3-ac04-48bb-9e2e-d82dd9365f73/mysql%20settings.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;installed_apps&quot;&gt;INSTALLED_APPS&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/eb56ca39-d584-42f2-bf4f-fd188329ec77/2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;mysite/settings.py&lt;/code&gt;에 확인하면 &lt;code class=&quot;highlighter-rouge&quot;&gt;installed_apps&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;django&lt;/code&gt;에서 기본으로 제공하는 앱들을 확인할 수 있다
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/482ae2e1-c2c4-4d28-9895-b951499dca2b/1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;앱들의 기능에 대한 내용이다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;기본 어플리케이션&lt;/code&gt;들 중 몇몇은 최소한 하나 이상의 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스 테이블&lt;/code&gt;을 사용한다&lt;/li&gt;
  &lt;li&gt;그러기 위해선 데이터베이스에서 테이블을 미리 만들 필요가 있음&lt;/li&gt;
  &lt;li&gt;다음 명령을 통해 테이블 생성 &lt;code class=&quot;highlighter-rouge&quot;&gt;python manage.py migrate&lt;/code&gt;
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/634521cc-efa3-48e3-9d58-7382a7444d58/migrate.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;model-작성하기&quot;&gt;model 작성하기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Model&lt;/code&gt;이란 부가적인 메타데이터를 가진 데이터베이스의 구조를 말한다&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;Choice&lt;/code&gt;라는 모델을 작성
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/41b9c6ad-2827-48e0-991e-8d80b36f6726/3.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt; 에는 질문(문자 최대길이 200) 내용 생성 날짜(시간 타입)
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/8a0ebaf6-6b71-4bfd-bbaf-ad98f54af343/4.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;choice&lt;/code&gt;에는 선택지에 해당하는 질문(&lt;code class=&quot;highlighter-rouge&quot;&gt;외래키&lt;/code&gt;=&lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt;의 내용을 참조하겠다, &lt;code class=&quot;highlighter-rouge&quot;&gt;CASCADE&lt;/code&gt; = &lt;code class=&quot;highlighter-rouge&quot;&gt;question&lt;/code&gt;이 삭제가 되면 &lt;code class=&quot;highlighter-rouge&quot;&gt;choice question&lt;/code&gt;도 삭제 하겠다), 투표수의 내용이 담겨 있음&lt;/li&gt;
  &lt;li&gt;여기서 &lt;code class=&quot;highlighter-rouge&quot;&gt;외래키&lt;/code&gt;에 대해서 더 살펴보면 하나의 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;에 여러개의 &lt;code class=&quot;highlighter-rouge&quot;&gt;foreignkey&lt;/code&gt;를 갖기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;1대 다 관계&lt;/code&gt;인 것을 확인할 수 있다&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;installed_apps에-pollsapp-추가하기&quot;&gt;INSTALLED_APPS에 polls.app 추가하기&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c2a60564-3394-443d-b802-08554bbaf8ed/settings%E1%84%8B%E1%85%A6%20app%20%E1%84%8E%E1%85%AE%E1%84%80%E1%85%A1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;makemigration&quot;&gt;makemigration&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;makemigration&lt;/code&gt; : &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;을 작성해 놓은 것을 &lt;code class=&quot;highlighter-rouge&quot;&gt;mygration&lt;/code&gt;이라는 장소에 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;들을 데이터베이스 내에 테이블을 생성할 수 있도록 설계도를 만드는 작업
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/5a50512d-3443-4240-a10d-ec003cc92cfe/makemigration%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;실행 결과(&lt;code class=&quot;highlighter-rouge&quot;&gt;migration&lt;/code&gt; 디렉토리 안에 생성된 것을 확인할수 있음)
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/f1130235-aef0-458a-b14a-0fc4eb3ee5a4/%E1%84%89%E1%85%A5%E1%86%AF%E1%84%80%E1%85%A8%E1%84%83%E1%85%A9.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;migrate&quot;&gt;migrate&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;migrate&lt;/code&gt;을 통해 실제 테이블 생성&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;api-가지고-놀기&quot;&gt;API 가지고 놀기&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;API&lt;/code&gt;란 &lt;code class=&quot;highlighter-rouge&quot;&gt;개발자&lt;/code&gt;가 필요로하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터&lt;/code&gt;를 뽑아낼 수 있도록 만들어 놓은 함수 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;서버&lt;/code&gt;에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터베이스&lt;/code&gt;에게 &lt;code class=&quot;highlighter-rouge&quot;&gt;데이터&lt;/code&gt;를 입력할 수 있도록 만들어 놓은 함수&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt; 진입
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ed889c19-4981-4d35-be11-a3a0eee1dd20/shell%20%E1%84%8C%E1%85%B5%E1%86%AB%E1%84%8B%E1%85%B5%E1%86%B8.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;에 만들어 놓은 &lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt; 추가
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/795fe633-6774-424a-bcf7-e837329a311f/shell%20model%20%E1%84%8E%E1%85%AE%E1%84%80%E1%85%A1.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;의 모든 내용 불러오기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question.object.all()&lt;/code&gt; - 현재 퀘스쳔 내의 모든 데이터를 가져와라&lt;/li&gt;
  &lt;li&gt;등록된 내용 없기 때문에 빈 내용 출력
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c1e4c2f2-c1fe-4216-a76e-8f4a4fa1ed55/question%20%E1%84%86%E1%85%A9%E1%84%83%E1%85%B3%E1%86%AB%20%E1%84%83%E1%85%A6%E1%84%8B%E1%85%B5%E1%84%90%E1%85%A5%20%E1%84%87%E1%85%AE%E1%86%AF%E1%84%85%E1%85%A5%E1%84%8B%E1%85%A9%E1%84%80%E1%85%B5.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;다음으로 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 내의 데이터 생성&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 내에는 질문내용과 발행일이 존재&lt;/li&gt;
  &lt;li&gt;발행일 시간을 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;timezone&lt;/code&gt; 라이브러리 &lt;code class=&quot;highlighter-rouge&quot;&gt;import&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;q.id&lt;/code&gt; 는 함수에서 명시하지 않아도 장고에서 추가 해줌
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/de5489ad-869b-4d5c-8121-87b4b77555fc/question%E1%84%8B%E1%85%A6%20%E1%84%82%E1%85%A2%E1%84%8B%E1%85%AD%E1%86%BC%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt;의 모든 내용 불러오기&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;object&lt;/code&gt;에 표시된 1로는 어떤 데이터인지 구분이 안감
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/ef171a9c-4f74-4da9-a651-90f1dc96049d/question%20%E1%84%8C%E1%85%A1%E1%86%A8%E1%84%89%E1%85%A5%E1%86%BC%20%E1%84%92%E1%85%AE%20object%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC%20%E1%84%80%E1%85%A7%E1%86%AF%E1%84%80%E1%85%AA.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;그렇기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__()&lt;/code&gt; 메소드를 모델 내에 심어주면 보고 싶은 문구를 볼 수 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;model&lt;/code&gt;안에 &lt;code class=&quot;highlighter-rouge&quot;&gt;__str__()&lt;/code&gt; 심어주기
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/463efce8-0a75-4fa7-b16e-322a60a5d504/__str__.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;저장하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;shell&lt;/code&gt;을 종료시킨 후 재실행해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;Question&lt;/code&gt; 모든 내용을 불러오면
&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/c57e9c4c-f3bc-44e3-beb2-3adbb39c5d01/str%20%E1%84%89%E1%85%B5%E1%86%AF%E1%84%92%E1%85%A2%E1%86%BC%E1%84%80%E1%85%A7%E1%86%AF%E1%84%80%E1%85%AA.png&quot; alt=&quot;&quot; /&gt;&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;str&lt;/code&gt; 결과를 볼 수 있다&lt;/li&gt;
  &lt;li&gt;추후 여러 실행결과를 리뷰할 예정&lt;/li&gt;
&lt;/ul&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">tutorial 2 review</summary>
      

      
      
    </entry>
  
    <entry>
      <title type="html">001. Django - Django의 기본 흐름과 tutorial 1 review</title>
      <link href="http://localhost:4000/001-django" rel="alternate" type="text/html" title="001. Django - Django의 기본 흐름과 tutorial 1 review" />
      <published>2021-03-25T00:00:00+09:00</published>
      <updated>2021-03-25T00:00:00+09:00</updated>
      <id>http://localhost:4000/001-django</id>
      <content type="html" xml:base="http://localhost:4000/001-django">&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;기본적으로 django, mysql이 설치되어 있는 상황 이후에 django에 대한
흐름을 이해하기 위한 글입니다
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;django-참고영상&quot;&gt;Django &lt;a href=&quot;https://www.youtube.com/watch?v=9WctwW_Pe1o&amp;amp;list=PLi4xPOplIq7d1vDdLBAvS5PmQR-p6KwUz&amp;amp;index=2&quot;&gt;(참고영상)&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/48d6b494-94be-45d4-b6a1-33185322bb1d/django%201.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;django의-흐름&quot;&gt;django의 흐름&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;client&lt;/code&gt;가 &lt;code class=&quot;highlighter-rouge&quot;&gt;web application&lt;/code&gt;을 보기 위해서 요청&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Nginx&lt;/code&gt; 또는 &lt;code class=&quot;highlighter-rouge&quot;&gt;Apache&lt;/code&gt;가 존재 이 둘은 흔히 &lt;strong&gt;상용 단계&lt;/strong&gt;에서 사용&lt;/li&gt;
  &lt;li&gt;장고에서는 개발을 위해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;경량 개발 웹서버&lt;/code&gt;를 제공하고 있음&lt;/li&gt;
  &lt;li&gt;개발할때는 &lt;code class=&quot;highlighter-rouge&quot;&gt;경량 개발 웹서버&lt;/code&gt;를 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;WSGI&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹서버&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;장고 프레임워크&lt;/code&gt;를 연결하기 위해 사용&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;request&lt;/code&gt;가 넘어가고 사용자가 특정 주소를 요청하는데 &lt;code class=&quot;highlighter-rouge&quot;&gt;url 파일&lt;/code&gt;에서 요청한 주소를 잘게 나눠줌 이 작업을 &lt;code class=&quot;highlighter-rouge&quot;&gt;parsing&lt;/code&gt;이라고 함&lt;/li&gt;
  &lt;li&gt;잘게 나눠진 주소들은 역할에 맞게 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;로 이동함&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt;에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 어플리케이션&lt;/code&gt;에 각각 맞는 작업을 하기 위한 내가 만든 코드가 존재
    &lt;ul&gt;
      &lt;li&gt;EX) 요청받은 데이터를 저장, 데이터베이스에서 꺼내오는 데이터베이스 작업, pdf를 생성하는 작업이라던지 등등&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 작업이 끝나면 디자인 작업인 &lt;code class=&quot;highlighter-rouge&quot;&gt;template&lt;/code&gt;으로 이동하고 사용자는 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;를 받게 된다&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;프로젝트와-앱의-차이&quot;&gt;프로젝트와 앱의 차이&lt;/h3&gt;

&lt;ul&gt;
  &lt;li&gt;프로젝트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysite&lt;/code&gt;와 같은 &lt;code class=&quot;highlighter-rouge&quot;&gt;앱&lt;/code&gt;의 묶음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;앱&lt;/code&gt;은 특정한 기능을 수행하는 &lt;code class=&quot;highlighter-rouge&quot;&gt;웹 어플리케이션&lt;/code&gt;
    &lt;ul&gt;
      &lt;li&gt;EX) 아이스크림 가게를 위한 앱을 만든다고 한다면, 1. 아이스크림 관리를 위한 관리 앱 2. 주문을 위한 주문 앱 3. 이벤트를 위한 이벤트 앱
특정 기능만 수행하는 앱을 각각 만들어서 프로젝트를 구성&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;django-tutorial-1&quot;&gt;django tutorial 1&lt;/h3&gt;

&lt;p&gt;&lt;img src=&quot;https://images.velog.io/images/hiyee-gj/post/eba56302-eab9-4943-b5ff-decfe3776cb2/django%202.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;라는 앱 생성(투표를 담당하는 앱)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view.py&lt;/code&gt;를 작성하고 &lt;code class=&quot;highlighter-rouge&quot;&gt;view.py&lt;/code&gt;를 호출하기 위해 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;를 만들고, 경로?? 입력&lt;/li&gt;
  &lt;li&gt;최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;에 방금 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 연결&lt;/li&gt;
  &lt;li&gt;최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;mysite&lt;/code&gt;의 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls.py&lt;/code&gt;에 있음&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;iclude&lt;/code&gt; 함수는 다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 참조할 수 있게 해줌&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;여기까지-흐름&quot;&gt;여기까지 흐름&lt;/h4&gt;

&lt;ol&gt;
  &lt;li&gt;현재 최상위 &lt;code class=&quot;highlighter-rouge&quot;&gt;URLconf&lt;/code&gt;에 내가 만든 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt; 앱의 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 연결함&lt;/li&gt;
  &lt;li&gt;예를 들어 &lt;code class=&quot;highlighter-rouge&quot;&gt;127.0.0.1/polls/&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;이 있다면 이 &lt;code class=&quot;highlighter-rouge&quot;&gt;url&lt;/code&gt;을 &lt;code class=&quot;highlighter-rouge&quot;&gt;parsing&lt;/code&gt;해서 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls&lt;/code&gt;라는 해당 경로를 잡아내고 &lt;code class=&quot;highlighter-rouge&quot;&gt;polls.urls&lt;/code&gt;로 연결시켜줌&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;/polls/&lt;/code&gt; 앱 &lt;code class=&quot;highlighter-rouge&quot;&gt;urls&lt;/code&gt;는 전달받고 이후에 아무것도 없기 때문에 &lt;code class=&quot;highlighter-rouge&quot;&gt;path&lt;/code&gt; 내에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;view.index&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부로 연결 시켜줌&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;view&lt;/code&gt; 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; 함수에서는 내가 작성한 &lt;code class=&quot;highlighter-rouge&quot;&gt;&quot;hello world&quot;&lt;/code&gt;라는 &lt;code class=&quot;highlighter-rouge&quot;&gt;response&lt;/code&gt;를 &lt;code class=&quot;highlighter-rouge&quot;&gt;client&lt;/code&gt;에게 전달 해줌&lt;/li&gt;
&lt;/ol&gt;</content>

      
      
      
      
      

      <author>
          <name>hiyee</name>
        
        
      </author>

      

      
        <category term="django" />
      

      
        <summary type="html">기본적으로 django, mysql이 설치되어 있는 상황 이후에 django에 대한 흐름을 이해하기 위한 글입니다</summary>
      

      
      
    </entry>
  
</feed>
